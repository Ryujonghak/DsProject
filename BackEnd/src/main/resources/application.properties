server.port=8000

spring.datasource.hikari.poolName=HikariPoolBooks
spring.datasource.hikari.minimumIdle=1
spring.datasource.hikari.maximumPoolSize=1

spring.datasource.driver-class-name=net.sf.log4jdbc.sql.jdbcapi.DriverSpy
spring.datasource.url=jdbc:log4jdbc:oracle:thin:@DsCloud95_high?TNS_ADMIN=/Users/rjh/Documents/Dev/97_eWalllet/Wallet_DsCloud95/
spring.datasource.username=RYUJH95
spring.datasource.password=Ehdtjdfbwhdgkr95

spring.devtools.restart.enabled=true
spring.jpa.defer-datasource-initialization=true
spring.jpa.hibernate.ddl-auto=create
spring.jpa.show-sql=true
spring.jpa.database-platform=org.hibernate.dialect.Oracle10gDialect
spring.jpa.properties.hibernate.format_sql=true

spring.sql.init.continue-on-error=true
spring.sql.init.mode=always

spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

bezkoder.app.jwtSecret= bezKoderSecretKey
bezkoder.app.jwtExpirationMs= 86400000


# Google simple login setting
spring.security.oauth2.client.registration.google.clientId=207287276283-km620mnd3t5iv9rftlcokfmg30uqn6gl.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.clientSecret=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
spring.security.oauth2.client.registration.google.scope=email, profile

# Naver simple login setting
#spring.security.oauth2.client.registration.naver.clientId=uINgNarKFEmrRjIetOzu
#spring.security.oauth2.client.registration.naver.clientSecret=wz7aILFlGz
  spring.security.oauth2.client.registration.naver.clientId=ECUsOezRWjwiHsRw_c7y
spring.security.oauth2.client.registration.naver.clientSecret=F1j0Ppi1GU
#spring.security.oauth2.client.registration.naver.redirect_uri=http://localhost:8000/login/oauth2/code/naver
spring.security.oauth2.client.registration.naver.redirect_uri={baseUrl}/{action}/oauth2/code/{registrationId}
spring.security.oauth2.client.registration.naver.scope=email, profile
spring.security.oauth2.client.registration.naver.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.naver.client-name=Naver

# Kakao simple login setting
spring.security.oauth2.client.registration.kakao.clientId=9252752ac5c1ee7714b4a184fc4d7cf0
spring.security.oauth2.client.registration.kakao.clientSecret=DC2eDMFHeGWuTDlgvxCKmztspyjaFpoC
spring.security.oauth2.client.registration.kakao.clientAuthenticationMethod=post
spring.security.oauth2.client.registration.kakao.authorizationGrantType=authorization_code
spring.security.oauth2.client.registration.kakao.redirectUri={baseUrl}/{action}/oauth2/code/{registrationId}
spring.security.oauth2.client.registration.kakao.scope=profile_nickname, account_email
spring.security.oauth2.client.registration.kakao.clientName=Kakao

# Naver provider register
spring.security.oauth2.client.provider.naver.authorization-uri=https://nid.naver.com/oauth2.0/authorize
spring.security.oauth2.client.provider.naver.token-uri=https://nid.naver.com/oauth2.0/token
spring.security.oauth2.client.provider.naver.user-info-uri=https://openapi.naver.com/v1/nid/me
spring.security.oauth2.client.provider.naver.user-name-attribute=response

# Kakao provider register
spring.security.oauth2.client.provider.kakao.authorizationUri=https://kauth.kakao.com/oauth/authorize
spring.security.oauth2.client.provider.kakao.tokenUri=https://kauth.kakao.com/oauth/token
spring.security.oauth2.client.provider.kakao.userInfoUri=https://kapi.kakao.com/v2/user/me
spring.security.oauth2.client.provider.kakao.userNameAttribute=id