{"ast":null,"code":"/* eslint-disable */\nimport MovieDataService from \"@/services/MovieDataService\";\nimport Review from \"@/model/review\";\nimport ReviewDataService from \"@/services/ReviewDataService\";\nimport Wishlist from \"@/model/Wishlist\";\nimport WishlistDataService from \"@/services/WishlistDataService\";\nimport SeatView from \"@/views/kim/SeatView.vue\";\nexport default {\n  mounted() {\n    // this.emptyReview(); // 로그인 유무 확인(by류종학, 230109)\n    // this.$route.params.moviecd : 이전페이지에서 전송한 매개변수는 $route.params 안에 있음\n    // $route 객체 : 주로 url 매개변수 정보들이 있음\n    // router/index.js 상세페이지 url의 매개변수명 : :moviecd\n    this.getMovie(this.$route.params.moviecd);\n    this.getBoxoffice(this.$route.params.moviecd);\n    this.getReview(this.$route.params.moviecd);\n    this.getWishlist();\n    // custom();\n    // this.cutNames();\n  },\n\n  components: {\n    SeatView\n  },\n  data() {\n    return {\n      // 찜하기 기능\n      wishlist: new Wishlist(),\n      movie: null,\n      boxoffice: null,\n      showBoxoffice: false,\n      boxofficeRank: 0,\n      review: [],\n      alreadyReviewed: false,\n      overview: true,\n      reviews: false,\n      media: false,\n      addReview: new Review(),\n      starRating: 0,\n      // 가져온 평점을 내림함수로 정수 만들어주기 위한 변수\n      userReview: \"\",\n      userStarRaing: 3,\n      tempImgUrl: [],\n      imageUrlLength: 0,\n      mYear: 0,\n      // 페이징을 위한 변수 정의\n      page: 1,\n      // 현재 페이지\n      count: 0,\n      // 전체 데이터 건수\n      pageSize: 3 // 한페이지당 몇개를 화면에 보여줄지 결정하는 변수\n    };\n  },\n\n  methods: {\n    getBoxoffice(moviecd) {\n      MovieDataService.getBoxoffice(moviecd).then(response => {\n        this.boxofficeRank = response.data.BoxOffice[0].rank;\n        this.showBoxoffice = true;\n        console.log(response.data.BoxOffice);\n      }).catch(e => {\n        console.log(e);\n      });\n    },\n    // 영화코드(moviecd)로 조회 요청하는 함수\n    getMovie(moviecd) {\n      MovieDataService.getMoviecd(moviecd).then(response => {\n        this.movie = response.data[0];\n        this.cutNames();\n        console.log(response.data[0]);\n      }).catch(e => {\n        console.log(e);\n      });\n    },\n    getReview(moviecd) {\n      ReviewDataService.getBycode(moviecd, this.page - 1, 10000000) // 모든 리뷰를 가져오기 위하여 임의로 준 수.\n      .then(response => {\n        const currentUserName = this.$store.state.auth.user.username;\n        const pastReviews = response.data.review.filter(r => r.rwuser == currentUserName);\n        this.alreadyReviewed = pastReviews.length > 0;\n      }).catch(e => {\n        console.log(e);\n      });\n      ReviewDataService.getBycode(moviecd, this.page - 1, this.pageSize).then(response => {\n        const {\n          review,\n          totalItems\n        } = response.data;\n        this.review = review;\n        this.count = totalItems;\n\n        // this.review = response.data;\n\n        // 백엔드에게 빈배열 리턴하라고 요청하기...\n        // 이 코드 지우면 첫번째 리뷰를 등록할 장소가 없어서 undefined 에러남...\n        // if (!response.data) {\n        //   this.review = { review: [] };\n        // }\n\n        // this.addReview.rwuser = this.$store.state.auth.user.username;\n        console.log(response.data);\n        // var test = this.review;\n        // alert(JSON.stringify(test));\n      }).catch(e => {\n        // alert(\"리뷰 실패\");\n        console.log(e);\n      });\n    },\n    saveReview() {\n      if (this.alreadyReviewed) {\n        alert(\"이미 리뷰를 남기셨습니다.\");\n        this.addReview = new Review();\n        return;\n      }\n      this.addReview.rwuser = this.$store.state.auth.user.username;\n      this.addReview.movienm = this.movie.movienm;\n      this.addReview.moviecd = this.movie.moviecd;\n      this.addReview.opendt = this.movie.opendt;\n      this.addReview.showtm = this.movie.showtm;\n      this.addReview.watchgradenm = this.movie.watchgradenm;\n      ReviewDataService.create(this.addReview).then(response => {\n        this.addReview.rid = response.data.rid;\n        console.log(response.data);\n        this.getReview(this.movie.moviecd);\n        alert(\"리뷰가 저장되었습니다.\");\n        this.addReview = new Review();\n      }).catch(e => {\n        console.log(e);\n      });\n    },\n    toOverview() {\n      this.overview = true;\n      this.reviews = false;\n      this.media = false;\n    },\n    toReview() {\n      this.overview = false;\n      this.reviews = true;\n      this.media = false;\n    },\n    toMedia() {\n      this.overview = false;\n      this.reviews = false;\n      this.media = true;\n    },\n    cutNames() {\n      // 배우, 배역, 이미지 잘라주기\n      if (this.movie.actor != null) {\n        this.movie.actor = this.movie.actor.split(\",\");\n      }\n      if (this.movie.cast != null) {\n        this.movie.cast = this.movie.cast.split(\",\");\n      }\n      if (this.movie.imgurl != null) {\n        this.movie.imgurl = this.movie.imgurl.split(\",\");\n        // 가져온 이미지 url 개수\n        this.imageUrlLength = this.movie.imgurl.length;\n\n        // 썸네일 이미지 2장만 보이게 설정\n        this.tempImgUrl[0] = this.movie.imgurl[0];\n        this.tempImgUrl[1] = this.movie.imgurl[1];\n      }\n\n      // 개봉일에서 연도만 잘라주기\n      this.mYear = this.movie.opendt.substr(0, 4);\n      if (this.movie.raiting != null) {\n        // 데이터 들어온 평점 내림하기 (별 반복문 돌리기 위해서)\n        this.starRating = Math.floor(this.movie.raiting);\n      }\n\n      // 관람등급 데이터가 2번 연달아 붙여서 오는 경우가 있어서 그 경우 잘라주기\n      if (this.movie.watchgradenm.includes(\",\")) {\n        this.movie.watchgradenm = this.movie.watchgradenm.split(\",\")[0];\n      }\n    },\n    likeSave() {\n      if (this.wishlist.username == null) {\n        // alert(\"get\");\n        this.wishlist = new Wishlist();\n        this.wishlist.username = this.$store.state.auth.user.username;\n        this.wishlist.moviecd = this.$route.params.moviecd;\n        this.wishlist.movienm = this.movie.movienm;\n        this.wishlist.posterurln = this.movie.posterurln;\n        this.wishlist.raiting = this.movie.raiting;\n        this.wishlist.opendt = this.movie.opendt;\n        WishlistDataService.create(this.wishlist).then(res => {\n          this.wishlist = res.data;\n          console.log(\"wishlist: \", this.wishlist);\n          // alert(\"create\");\n          // this.getWishlist();\n        }).catch(err => {\n          // alert(\"찜 하기 에러\");\n          console.log(err);\n        });\n      } else {\n        WishlistDataService.delete(this.wishlist.wid).then(res => {\n          console.log(res.data);\n          // alert(\"Delete\");\n          this.getWishlist();\n        }).catch(err => {\n          // alert(\"찜 지우기 에러\");\n          console.log(err);\n        });\n      }\n    },\n    getWishlist() {\n      WishlistDataService.get(this.$store.state.auth.user.username, this.$route.params.moviecd).then(res => {\n        if (!res.data) {\n          this.wishlist = new Wishlist();\n        } else {\n          this.wishlist = res.data[0];\n        }\n        console.log(this.$store.state.auth.user.username);\n        console.log(this.$route.params.moviecd);\n        // console.log(res.data);\n        console.log(\"wishlist: \", this.wishlist);\n        // alert(\"get\");\n      }).catch(err => {\n        console.log(err);\n      });\n    },\n    // TODO: 수정해야함.\n    emptyReview() {\n      // alert(\"emptyReview\");\n      // alert(this.$store.state.auth.user.username);\n      if (this.$store.state.auth.user == null) {\n        // alert(\"Not Login\");\n        return false;\n      } else {\n        // alert(\"Login\");\n        return true;\n      }\n    },\n    // 페이지 번호 변경시 실행되는 함수(재조회)\n    handlePageChange(value) {\n      this.page = value; // 매개변수값으로 현재페이지 변경\n      // 재조회 함수 호출\n      this.getReview(this.movie.moviecd);\n    }\n  }\n};","map":{"version":3,"mappings":"AA2aA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;EACAA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EACA;;EACAC;IACAC;EACA;EACAC;IACA;MACA;MACAC;MAEAC;MACAC;MACAC;MACAC;MACAC;MACAC;MAEAC;MACAC;MACAC;MAEAC;MAEAC;MAAA;MACAC;MACAC;MACAC;MACAC;MACAC;MAEA;MACAC;MAAA;MACAC;MAAA;MACAC;IACA;EACA;;EACAC;IACAC;MACAC,uCACAC;QACA;QACA;QACAC;MACA,GACAC;QACAD;MACA;IACA;IACA;IACAE;MACAJ,qCACAC;QACA;QACA;QACAC;MACA,GACAC;QACAD;MACA;IACA;IACAG;MACAC;MAAA,CACAL;QACA;QACA,gDACAM,iCACA;QACA;MACA,GACAJ;QACAD;MACA;MACAI,mEACAL;QACA;UAAAlB;UAAAyB;QAAA;QACA;QACA;;QAEA;;QAEA;QACA;QACA;QACA;QACA;;QAEA;QACAN;QACA;QACA;MACA,GACAC;QACA;QACAD;MACA;IACA;IACAO;MACA;QACAC;QACA;QACA;MACA;MAEA;MACA;MACA;MACA;MACA;MACA;MAEAJ,yCACAL;QACA;QACAC;QACA;QAEAQ;QACA;MACA,GACAP;QACAD;MACA;IACA;IAEAS;MACA;MACA;MACA;IACA;IACAC;MACA;MACA;MACA;IACA;IACAC;MACA;MACA;MACA;IACA;IACAC;MACA;MACA;QACA;MACA;MAEA;QACA;MACA;MAEA;QACA;QACA;QACA;;QAEA;QACA;QACA;MACA;;MAEA;MACA;MAEA;QACA;QACA;MACA;;MAEA;MACA;QACA;MACA;IACA;IACAC;MACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QAEAC,0CACAf;UACA;UACAC;UACA;UACA;QACA,GACAC;UACA;UACAD;QACA;MACA;QACAc,8CACAf;UACAC;UACA;UACA;QACA,GACAC;UACA;UACAD;QACA;MACA;IACA;IACAe;MACAD,wBACA,sCACA,2BACA,CACAf;QACA;UACA;QACA;UACA;QACA;QAEAC;QACAA;QACA;QACAA;QACA;MACA,GACAC;QACAD;MACA;IACA;IACA;IACAgB;MACA;MACA;MACA;QACA;QACA;MACA;QACA;QACA;MACA;IACA;IAEA;IACAC;MACA;MACA;MACA;IACA;EACA;AACA","names":["mounted","components","SeatView","data","wishlist","movie","boxoffice","showBoxoffice","boxofficeRank","review","alreadyReviewed","overview","reviews","media","addReview","starRating","userReview","userStarRaing","tempImgUrl","imageUrlLength","mYear","page","count","pageSize","methods","getBoxoffice","MovieDataService","then","console","catch","getMovie","getReview","ReviewDataService","r","totalItems","saveReview","alert","toOverview","toReview","toMedia","cutNames","likeSave","WishlistDataService","getWishlist","emptyReview","handlePageChange"],"sourceRoot":"src/views/choi","sources":["MovieDetail.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <!-- TODO: 영화 상세보기 페이지입니다. 메인 케러셀 -> 메인 디테일 -> 상세보기 통해서도 올 수 있고 전체 영화보기를 통해서도 들어올 수 있습나다. -->\r\n    <div class=\"hero mv-single-hero\">\r\n      <div class=\"container\">\r\n        <div class=\"row\">\r\n          <div class=\"col-md-12\"></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"page-single movie-single movie_single\">\r\n      <div class=\"container\">\r\n        <div class=\"row ipad-width2\">\r\n          <!-- 왼쪽 사이드 바 시작 -->\r\n          <div class=\"col-md-4 col-sm-12 col-xs-12\">\r\n            <div class=\"movie-img\">\r\n              <img :src=\"movie.posterurln\" alt=\"poster\" style=\"width: 310px\" />\r\n              <div class=\"movie-btn\">\r\n                <div class=\"btn-transform transform-vertical red\">\r\n                  <div>\r\n                    <a href=\"#\" class=\"item item-1 redbtn\">\r\n                      <i class=\"ion-play\"></i>예고편보기</a\r\n                    >\r\n                  </div>\r\n                  <div>\r\n                    <!-- TODO: 유튜브 URL, 영화 이름, 예매 페이지 연결 등 백엔드 데이터 받아와야 하는 곳 -->\r\n                    <a\r\n                      :href=\"movie.utubeurl\"\r\n                      class=\"item item-2 redbtn fancybox-media hvr-grow\"\r\n                      ><i class=\"ion-play\"></i\r\n                    ></a>\r\n                  </div>\r\n                </div>\r\n                <div class=\"btn-transform transform-vertical\">\r\n                  <div>\r\n                    <a class=\"item item-1 yellowbtn\">\r\n                      <i class=\"ion-card\"></i>예매하기</a\r\n                    >\r\n                  </div>\r\n                  <div>\r\n                    <router-link\r\n                      :to=\"'/SeatTest/' + movie.moviecd\"\r\n                      class=\"item item-2 yellowbtn\"\r\n                      ><i class=\"ion-card\"></i\r\n                    ></router-link>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <!-- 왼쪽 사이드 바 끝 -->\r\n\r\n          <div class=\"col-md-8 col-sm-12 col-xs-12\">\r\n            <div class=\"movie-single-ct main-content\">\r\n              <h6\r\n                style=\"margin-bottom: 1%; color: #abb7c4\"\r\n                v-show=\"showBoxoffice\"\r\n              >\r\n                현재 박스오피스 {{ boxofficeRank }} 위\r\n              </h6>\r\n              <h1 class=\"bd-hd\" style=\"margin-bottom: 40px\">\r\n                {{ movie.movienm }}<span>{{ mYear }}</span>\r\n              </h1>\r\n              <div class=\"social-btn\">\r\n                <a\r\n                  v-show=\"wishlist.username == null\"\r\n                  class=\"parent-btn\"\r\n                  @click=\"likeSave\"\r\n                  ><i class=\"ion-ios-heart-outline\"></i>찜하기</a\r\n                >\r\n                <a\r\n                  v-show=\"wishlist.username != null\"\r\n                  class=\"parent-btn\"\r\n                  @click=\"likeSave\"\r\n                  ><i class=\"ion-ios-heart\"></i>찜하기 완료</a\r\n                >\r\n                <!-- <div class=\"hover-bnt\"> -->\r\n                <!-- <a href=\"#\" class=\"parent-btn\" id=\"sh-link\"\r\n                  ><i class=\"ion-android-share-alt\"></i>공유하기</a\r\n                > -->\r\n                <!-- </div> -->\r\n              </div>\r\n              <div class=\"movie-rate\">\r\n                <div class=\"rate\">\r\n                  <i class=\"ion-android-star\"></i>\r\n                  <p>\r\n                    <span>{{ movie.raiting }}</span> /10<br />\r\n                  </p>\r\n                </div>\r\n                <div class=\"rate-star\">\r\n                  <p>별점:</p>\r\n                  <span\r\n                    class=\"rate-star-result\"\r\n                    v-for=\"(i, index) in starRating\"\r\n                    :key=\"index\"\r\n                    ><i class=\"ion-ios-star\"></i\r\n                  ></span>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"movie-tabs\">\r\n                <div class=\"tabs\">\r\n                  <!-- <ul class=\"tab-links tabs-mv\">\r\n                    <li class=\"active\" @click=\"toOverview\"><a>영화정보</a></li>\r\n                    <li><a @click=\"toReview\">평점 및 관람평</a></li>\r\n                    <li><a @click=\"toMedia\">포스터/스틸컷</a></li>\r\n                  </ul> -->\r\n                  <div class=\"tab-content\">\r\n                    <!-- 1) 영화 정보 시작 -->\r\n                    <div class=\"tab active\" v-show=\"overview\">\r\n                      <ul class=\"tabs-mv tab-bar\">\r\n                        <li>\r\n                          <a class=\"selected\" @click=\"toOverview\">영화정보</a>\r\n                        </li>\r\n                        <li>\r\n                          <a class=\"not-selected\" @click=\"toReview\"\r\n                            >평점 및 관람평</a\r\n                          >\r\n                        </li>\r\n                        <li>\r\n                          <a class=\"not-selected\" @click=\"toMedia\"\r\n                            >포스터/스틸컷</a\r\n                          >\r\n                        </li>\r\n                      </ul>\r\n                      <div class=\"row\">\r\n                        <div class=\"col-md-8 col-sm-12 col-xs-12\">\r\n                          <p>\r\n                            {{ movie.plot }}\r\n                          </p>\r\n                          <div class=\"title-hd-sm\">\r\n                            <h4>포스터/스틸컷</h4>\r\n                            <div class=\"tab-links active\">\r\n                              <a href=\"#media\" class=\"time\" @click=\"toMedia\"\r\n                                >더보기 <i class=\"ion-ios-arrow-right\"></i\r\n                              ></a>\r\n                            </div>\r\n                          </div>\r\n                          <!-- 표지 이미지들 (최대 4개까지 가져오고싶음) -->\r\n                          <!-- 이미지 가져오기 test 시작 -->\r\n                          <span class=\"mvsingle-item ov-item\">\r\n                            <a\r\n                              v-for=\"(data, index) in tempImgUrl\"\r\n                              :key=\"index\"\r\n                              class=\"img-lightbox\"\r\n                              data-fancybox-group=\"gallery\"\r\n                              ><img\r\n                                class=\"small-thumnail\"\r\n                                :src=\"data\"\r\n                                alt=\"썸네일\"\r\n                            /></a>\r\n                          </span>\r\n                          <!-- 이미지 가져오기 test 끝 -->\r\n                          <div class=\"title-hd-sm\">\r\n                            <h4>출연/대표작</h4>\r\n                          </div>\r\n                          <!-- 목록 불러오기 테스트 시작 -->\r\n                          <!-- 2번째 실험 시작 -->\r\n                          <div class=\"mvcast-item\">\r\n                            <ul class=\"col-xs-6\">\r\n                              <li\r\n                                class=\"cast-it\"\r\n                                style=\"color: #abb7c4\"\r\n                                v-for=\"(data, index) in movie.actor\"\r\n                                :key=\"index\"\r\n                              >\r\n                                {{ data }}\r\n                              </li>\r\n                            </ul>\r\n                            <ul class=\"col-xs-6\">\r\n                              <li\r\n                                class=\"cast-it\"\r\n                                style=\"color: #abb7c4\"\r\n                                v-for=\"(data, index) in movie.cast\"\r\n                                :key=\"index\"\r\n                              >\r\n                                {{ data }}\r\n                              </li>\r\n                            </ul>\r\n                          </div>\r\n                          <!-- 목록 불러오기 테스트 끝 -->\r\n                        </div>\r\n\r\n                        <!-- 오른쪽 사이드 바 시작 -->\r\n                        <!-- TODO: 감독, 장르, 개봉일, 러닝타임 등 데이터 가져오기 -->\r\n                        <div class=\"col-md-4 col-xs-12 col-sm-12\">\r\n                          <div class=\"sb-it\">\r\n                            <h6>감독:</h6>\r\n                            <p>{{ movie.directors }}</p>\r\n                          </div>\r\n                          <div class=\"sb-it\">\r\n                            <h6>장르:</h6>\r\n                            <p>{{ movie.genrenm }}</p>\r\n                          </div>\r\n                          <div class=\"sb-it\">\r\n                            <h6>관람등급:</h6>\r\n                            <p>{{ movie.watchgradenm }}</p>\r\n                          </div>\r\n                          <div class=\"sb-it\">\r\n                            <h6>개봉:</h6>\r\n                            <p>{{ movie.opendt }}</p>\r\n                          </div>\r\n                          <div class=\"sb-it\">\r\n                            <h6>러닝타임:</h6>\r\n                            <p>{{ movie.showtm }}분</p>\r\n                          </div>\r\n                        </div>\r\n                        <!-- 오른쪽 사이드 바 끝 -->\r\n                      </div>\r\n                    </div>\r\n                    <!-- 1) 영화 정보 끝 -->\r\n\r\n                    <!-- 2) 리뷰 파트 시작 -->\r\n                    <div id=\"reviewPart\" class=\"tab active\" v-show=\"reviews\">\r\n                      <ul class=\"tabs-mv tab-bar\">\r\n                        <li>\r\n                          <a class=\"not-selected\" @click=\"toOverview\"\r\n                            >영화정보</a\r\n                          >\r\n                        </li>\r\n                        <li>\r\n                          <a class=\"selected\" @click=\"toReview\"\r\n                            >평점 및 관람평</a\r\n                          >\r\n                        </li>\r\n                        <li>\r\n                          <a class=\"not-selected\" @click=\"toMedia\"\r\n                            >포스터/스틸컷</a\r\n                          >\r\n                        </li>\r\n                      </ul>\r\n                      <div class=\"row\" style=\"padding: 3%\">\r\n                        <div class=\"rv-hd\">\r\n                          <div class=\"div\">\r\n                            <h3>DS CINEMA</h3>\r\n                            <h2>{{ movie.movienm }}</h2>\r\n                          </div>\r\n                        </div>\r\n                        <div class=\"rv-hd\" v-show=\"emptyReview()\">\r\n                          <form\r\n                            class=\"review-form col-xs-9\"\r\n                            name=\"myform\"\r\n                            id=\"myform\"\r\n                            method=\"post\"\r\n                          >\r\n                            <fieldset>\r\n                              <!-- <span class=\"review-form-style\">별점을 선택해주세요</span> -->\r\n                              <input\r\n                                type=\"radio\"\r\n                                name=\"reviewStar\"\r\n                                value=\"5\"\r\n                                id=\"rate1\"\r\n                                v-model=\"addReview.rurating\"\r\n                              /><label for=\"rate1\">★</label>\r\n                              <input\r\n                                type=\"radio\"\r\n                                name=\"reviewStar\"\r\n                                value=\"4\"\r\n                                id=\"rate2\"\r\n                                v-model=\"addReview.rurating\"\r\n                              /><label for=\"rate2\">★</label>\r\n                              <input\r\n                                type=\"radio\"\r\n                                name=\"reviewStar\"\r\n                                value=\"3\"\r\n                                id=\"rate3\"\r\n                                v-model=\"addReview.rurating\"\r\n                              /><label for=\"rate3\">★</label>\r\n                              <input\r\n                                type=\"radio\"\r\n                                name=\"reviewStar\"\r\n                                value=\"2\"\r\n                                id=\"rate4\"\r\n                                v-model=\"addReview.rurating\"\r\n                              /><label for=\"rate4\">★</label>\r\n                              <input\r\n                                type=\"radio\"\r\n                                name=\"reviewStar\"\r\n                                value=\"1\"\r\n                                id=\"rate5\"\r\n                                v-model=\"addReview.rurating\"\r\n                              /><label for=\"rate5\">★</label>\r\n                            </fieldset>\r\n                            <div>\r\n                              <textarea\r\n                                v-model=\"addReview.rucontent\"\r\n                                class=\"col-auto form-control\"\r\n                                style=\"fontsize: 91%\"\r\n                                type=\"text\"\r\n                                id=\"reviewContents\"\r\n                                placeholder=\"평점 및 영화 관람평을 작성해주세요. 주제와 무관한 리뷰 또는 스포일러는 삭제될 수 있습니다.\"\r\n                              ></textarea>\r\n                            </div>\r\n                          </form>\r\n                          <div class=\"col-xs-3\">\r\n                            <!-- 리뷰 작성 버튼에 함수 걸어주기 -->\r\n                            <a\r\n                              href=\"#\"\r\n                              class=\"redbtn\"\r\n                              style=\"\"\r\n                              @click=\"saveReview\"\r\n                              >관람평 작성</a\r\n                            >\r\n                          </div>\r\n                        </div>\r\n                        <div\r\n                          class=\"mv-user-review-item col-xs-12\"\r\n                          style=\"padding-left:0%\"\r\n                          v-for=\"(data, index) in review\"\r\n                          :key=\"index\"\r\n                        >\r\n                          <div class=\"user-infor\">\r\n                            <div class=\"col-xs-2\" style=\"padding-left:0%\">\r\n                              <img\r\n                                src=\"@/assets/images_choi/Views/choi/MovieDetail/user.png\"\r\n                                alt=\"user\"\r\n                                style=\"width: 50%;margin-left: 5%;\"\r\n                              />\r\n                              <p class=\"time\" style=\"fontsize: 100%;margin-left: 15%;\">\r\n                                {{ data.rwuser }}\r\n                              </p>\r\n                            </div>\r\n                            <div class=\"col-xs-10\" style=\"padding-left:0%\">\r\n                              <div class=\"rate-star\">\r\n                                <span\r\n                                  class=\"rate-star-result\"\r\n                                  v-for=\"(i, index) in data.rurating\"\r\n                                  :key=\"index\"\r\n                                  ><i\r\n                                    class=\"ion-ios-star\"\r\n                                    style=\"color: #f5b50a\"\r\n                                  ></i\r\n                                ></span>\r\n                              </div>\r\n                              <p style=\"margin-top: 2%; color: white\">\r\n                                {{ data.rucontent }}\r\n                              </p>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        <!-- Todo : page 바 시작 -->\r\n                        <div class=\"col-md-12\">\r\n                          <b-pagination\r\n                            v-model=\"page\"\r\n                            :total-rows=\"count\"\r\n                            :per-page=\"pageSize\"\r\n                            prev-text=\"<\"\r\n                            next-text=\">\"\r\n                            @change=\"handlePageChange\"\r\n                          ></b-pagination>\r\n                        </div>\r\n                        <!-- Todo : page 바 끝 -->\r\n                      </div>\r\n                    </div>\r\n                    <!-- 2) 리뷰 파트 끝 -->\r\n\r\n                    <!-- 3) 스틸컷 시작 -->\r\n                    <div class=\"tab active\" v-show=\"media\">\r\n                      <ul class=\"tabs-mv tab-bar\">\r\n                        <li>\r\n                          <a class=\"not-selected\" @click=\"toOverview\"\r\n                            >영화정보</a\r\n                          >\r\n                        </li>\r\n                        <li>\r\n                          <a class=\"not-selected\" @click=\"toReview\"\r\n                            >평점 및 관람평</a\r\n                          >\r\n                        </li>\r\n                        <li>\r\n                          <a class=\"selected\" @click=\"toMedia\">포스터/스틸컷</a>\r\n                        </li>\r\n                      </ul>\r\n                      <div class=\"row\" style=\"padding: 3%\">\r\n                        <div class=\"rv-hd\">\r\n                          <div>\r\n                            <h3>DS CINEMA</h3>\r\n                            <h2>{{ movie.movienm }}</h2>\r\n                          </div>\r\n                        </div>\r\n                        <div class=\"title-hd-sm\">\r\n                          <h3>\r\n                            {{ movie.movienm }}에 대한\r\n                            <span style=\"color: #4280bf\">{{\r\n                              imageUrlLength\r\n                            }}</span\r\n                            >개의 스틸컷이 있어요!\r\n                          </h3>\r\n                        </div>\r\n                        <div class=\"mvsingle-item media-item\">\r\n                          <div>\r\n                            <div class=\"mvsingle-item ov-item\">\r\n                              <a\r\n                                v-for=\"(data, index) in movie.imgurl\"\r\n                                :key=\"index\"\r\n                                class=\"portfolio-box splice\"\r\n                                ><img\r\n                                  class=\"small-thumnail\"\r\n                                  :src=\"data\"\r\n                                  alt=\"썸네일\"\r\n                              /></a>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <!-- 3) 스틸컷 끝 -->\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <!-- <div >\r\n      <SeatView :movieProps2=\"movie\" />\r\n    </div> -->\r\n    <!-- TODO: 탑버튼 추가_정주희 -->\r\n    <a class=\"topbutton\" href=\"#\">\r\n      <img src=\"@/assets/images_jung/iconUp_48.png\" />\r\n    </a>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n/* eslint-disable */\r\nimport MovieDataService from \"@/services/MovieDataService\";\r\nimport Review from \"@/model/review\";\r\nimport ReviewDataService from \"@/services/ReviewDataService\";\r\nimport Wishlist from \"@/model/Wishlist\";\r\nimport WishlistDataService from \"@/services/WishlistDataService\";\r\nimport SeatView from \"@/views/kim/SeatView.vue\";\r\n\r\nexport default {\r\n  mounted() {\r\n    // this.emptyReview(); // 로그인 유무 확인(by류종학, 230109)\r\n    // this.$route.params.moviecd : 이전페이지에서 전송한 매개변수는 $route.params 안에 있음\r\n    // $route 객체 : 주로 url 매개변수 정보들이 있음\r\n    // router/index.js 상세페이지 url의 매개변수명 : :moviecd\r\n    this.getMovie(this.$route.params.moviecd);\r\n    this.getBoxoffice(this.$route.params.moviecd);\r\n    this.getReview(this.$route.params.moviecd);\r\n    this.getWishlist();\r\n    // custom();\r\n    // this.cutNames();\r\n  },\r\n  components: {\r\n    SeatView,\r\n  },\r\n  data() {\r\n    return {\r\n      // 찜하기 기능\r\n      wishlist: new Wishlist(),\r\n\r\n      movie: null,\r\n      boxoffice: null,\r\n      showBoxoffice: false,\r\n      boxofficeRank: 0,\r\n      review: [],\r\n      alreadyReviewed: false,\r\n\r\n      overview: true,\r\n      reviews: false,\r\n      media: false,\r\n\r\n      addReview: new Review(),\r\n\r\n      starRating: 0, // 가져온 평점을 내림함수로 정수 만들어주기 위한 변수\r\n      userReview: \"\",\r\n      userStarRaing: 3,\r\n      tempImgUrl: [],\r\n      imageUrlLength: 0,\r\n      mYear: 0,\r\n\r\n      // 페이징을 위한 변수 정의\r\n      page: 1, // 현재 페이지\r\n      count: 0, // 전체 데이터 건수\r\n      pageSize: 3, // 한페이지당 몇개를 화면에 보여줄지 결정하는 변수\r\n    };\r\n  },\r\n  methods: {\r\n    getBoxoffice(moviecd) {\r\n      MovieDataService.getBoxoffice(moviecd)\r\n        .then((response) => {\r\n          this.boxofficeRank = response.data.BoxOffice[0].rank;\r\n          this.showBoxoffice = true;\r\n          console.log(response.data.BoxOffice);\r\n        })\r\n        .catch((e) => {\r\n          console.log(e);\r\n        });\r\n    },\r\n    // 영화코드(moviecd)로 조회 요청하는 함수\r\n    getMovie(moviecd) {\r\n      MovieDataService.getMoviecd(moviecd)\r\n        .then((response) => {\r\n          this.movie = response.data[0];\r\n          this.cutNames();\r\n          console.log(response.data[0]);\r\n        })\r\n        .catch((e) => {\r\n          console.log(e);\r\n        });\r\n    },\r\n    getReview(moviecd) {\r\n      ReviewDataService.getBycode(moviecd, this.page - 1, 10000000) // 모든 리뷰를 가져오기 위하여 임의로 준 수.\r\n        .then((response) => {\r\n          const currentUserName = this.$store.state.auth.user.username;\r\n          const pastReviews = response.data.review.filter(\r\n            (r) => r.rwuser == currentUserName\r\n          );\r\n          this.alreadyReviewed = pastReviews.length > 0;\r\n        })\r\n        .catch((e) => {\r\n          console.log(e);\r\n        });\r\n      ReviewDataService.getBycode(moviecd, this.page - 1, this.pageSize)\r\n        .then((response) => {\r\n          const { review, totalItems } = response.data;\r\n          this.review = review;\r\n          this.count = totalItems;\r\n\r\n          // this.review = response.data;\r\n\r\n          // 백엔드에게 빈배열 리턴하라고 요청하기...\r\n          // 이 코드 지우면 첫번째 리뷰를 등록할 장소가 없어서 undefined 에러남...\r\n          // if (!response.data) {\r\n          //   this.review = { review: [] };\r\n          // }\r\n\r\n          // this.addReview.rwuser = this.$store.state.auth.user.username;\r\n          console.log(response.data);\r\n          // var test = this.review;\r\n          // alert(JSON.stringify(test));\r\n        })\r\n        .catch((e) => {\r\n          // alert(\"리뷰 실패\");\r\n          console.log(e);\r\n        });\r\n    },\r\n    saveReview() {\r\n      if (this.alreadyReviewed) {\r\n        alert(\"이미 리뷰를 남기셨습니다.\");\r\n        this.addReview = new Review();\r\n        return;\r\n      }\r\n\r\n      this.addReview.rwuser = this.$store.state.auth.user.username;\r\n      this.addReview.movienm = this.movie.movienm;\r\n      this.addReview.moviecd = this.movie.moviecd;\r\n      this.addReview.opendt = this.movie.opendt;\r\n      this.addReview.showtm = this.movie.showtm;\r\n      this.addReview.watchgradenm = this.movie.watchgradenm;\r\n\r\n      ReviewDataService.create(this.addReview)\r\n        .then((response) => {\r\n          this.addReview.rid = response.data.rid;\r\n          console.log(response.data);\r\n          this.getReview(this.movie.moviecd);\r\n\r\n          alert(\"리뷰가 저장되었습니다.\");\r\n          this.addReview = new Review();\r\n        })\r\n        .catch((e) => {\r\n          console.log(e);\r\n        });\r\n    },\r\n\r\n    toOverview() {\r\n      this.overview = true;\r\n      this.reviews = false;\r\n      this.media = false;\r\n    },\r\n    toReview() {\r\n      this.overview = false;\r\n      this.reviews = true;\r\n      this.media = false;\r\n    },\r\n    toMedia() {\r\n      this.overview = false;\r\n      this.reviews = false;\r\n      this.media = true;\r\n    },\r\n    cutNames() {\r\n      // 배우, 배역, 이미지 잘라주기\r\n      if (this.movie.actor != null) {\r\n        this.movie.actor = this.movie.actor.split(\",\");\r\n      }\r\n\r\n      if (this.movie.cast != null) {\r\n        this.movie.cast = this.movie.cast.split(\",\");\r\n      }\r\n\r\n      if (this.movie.imgurl != null) {\r\n        this.movie.imgurl = this.movie.imgurl.split(\",\");\r\n        // 가져온 이미지 url 개수\r\n        this.imageUrlLength = this.movie.imgurl.length;\r\n\r\n        // 썸네일 이미지 2장만 보이게 설정\r\n        this.tempImgUrl[0] = this.movie.imgurl[0];\r\n        this.tempImgUrl[1] = this.movie.imgurl[1];\r\n      }\r\n\r\n      // 개봉일에서 연도만 잘라주기\r\n      this.mYear = this.movie.opendt.substr(0, 4);\r\n\r\n      if (this.movie.raiting != null) {\r\n        // 데이터 들어온 평점 내림하기 (별 반복문 돌리기 위해서)\r\n        this.starRating = Math.floor(this.movie.raiting);\r\n      }\r\n\r\n      // 관람등급 데이터가 2번 연달아 붙여서 오는 경우가 있어서 그 경우 잘라주기\r\n      if (this.movie.watchgradenm.includes(\",\")) {\r\n        this.movie.watchgradenm = this.movie.watchgradenm.split(\",\")[0];\r\n      }\r\n    },\r\n    likeSave() {\r\n      if (this.wishlist.username == null) {\r\n        // alert(\"get\");\r\n        this.wishlist = new Wishlist();\r\n        this.wishlist.username = this.$store.state.auth.user.username;\r\n        this.wishlist.moviecd = this.$route.params.moviecd;\r\n        this.wishlist.movienm = this.movie.movienm;\r\n        this.wishlist.posterurln = this.movie.posterurln;\r\n        this.wishlist.raiting = this.movie.raiting;\r\n        this.wishlist.opendt = this.movie.opendt;\r\n\r\n        WishlistDataService.create(this.wishlist)\r\n          .then((res) => {\r\n            this.wishlist = res.data;\r\n            console.log(\"wishlist: \", this.wishlist);\r\n            // alert(\"create\");\r\n            // this.getWishlist();\r\n          })\r\n          .catch((err) => {\r\n            // alert(\"찜 하기 에러\");\r\n            console.log(err);\r\n          });\r\n      } else {\r\n        WishlistDataService.delete(this.wishlist.wid)\r\n          .then((res) => {\r\n            console.log(res.data);\r\n            // alert(\"Delete\");\r\n            this.getWishlist();\r\n          })\r\n          .catch((err) => {\r\n            // alert(\"찜 지우기 에러\");\r\n            console.log(err);\r\n          });\r\n      }\r\n    },\r\n    getWishlist() {\r\n      WishlistDataService.get(\r\n        this.$store.state.auth.user.username,\r\n        this.$route.params.moviecd\r\n      )\r\n        .then((res) => {\r\n          if (!res.data) {\r\n            this.wishlist = new Wishlist();\r\n          } else {\r\n            this.wishlist = res.data[0];\r\n          }\r\n\r\n          console.log(this.$store.state.auth.user.username);\r\n          console.log(this.$route.params.moviecd);\r\n          // console.log(res.data);\r\n          console.log(\"wishlist: \", this.wishlist);\r\n          // alert(\"get\");\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    },\r\n    // TODO: 수정해야함.\r\n    emptyReview() {\r\n      // alert(\"emptyReview\");\r\n      // alert(this.$store.state.auth.user.username);\r\n      if (this.$store.state.auth.user == null) {\r\n        // alert(\"Not Login\");\r\n        return false;\r\n      } else {\r\n        // alert(\"Login\");\r\n        return true;\r\n      }\r\n    },\r\n\r\n    // 페이지 번호 변경시 실행되는 함수(재조회)\r\n    handlePageChange(value) {\r\n      this.page = value; // 매개변수값으로 현재페이지 변경\r\n      // 재조회 함수 호출\r\n      this.getReview(this.movie.moviecd);\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.tabs ul.tabs-mv {\r\n  padding: 1%;\r\n  margin-bottom: 30px;\r\n}\r\n\r\n.tab-bar {\r\n  display: -webkit-flex;\r\n  display: -moz-box;\r\n  display: -ms-flexbox;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: flex-start;\r\n  margin-bottom: 0;\r\n  padding: 0;\r\n  font-family: \"Dosis\", sans-serif;\r\n  font-size: 14px;\r\n  color: #abb7c4;\r\n  font-weight: bold;\r\n  text-transform: uppercase;\r\n  /* margin-bottom: 15px; */\r\n  /* margin-right: 20px; */\r\n}\r\n\r\n.tab-bar li .not-selected {\r\n  font-family: \"Dosis\", sans-serif;\r\n  font-size: 18px;\r\n  color: #abb7c4;\r\n  font-weight: bold;\r\n  text-transform: uppercase;\r\n}\r\n\r\n.tab-bar li a:hover {\r\n  color: #dcf836;\r\n}\r\n\r\n.tab-bar li .selected {\r\n  color: #dcf836;\r\n  font-size: 18px;\r\n  padding-bottom: 15px;\r\n  border-bottom: 3px solid #dcf836;\r\n}\r\n\r\n.movie-img {\r\n  position: fixed;\r\n}\r\n\r\n/*movie single hero*/\r\n/* TODO: 이미지 이걸로 통일하는거 어떤지 물어보기 */\r\n.mv-single-hero {\r\n  background: url(@/assets/images_choi/Views/choi/MovieDetail/movie-theater02.jpg)\r\n    no-repeat;\r\n  /* height: 598px; */\r\n  width: 100%;\r\n}\r\n\r\n.watched-people {\r\n  font-size: 500%;\r\n  /* text-align: center; */\r\n  color: grey;\r\n  margin-top: 15%;\r\n}\r\n\r\n.rate-star-result {\r\n  padding: 0%;\r\n  margin: 0%;\r\n}\r\n\r\n.movie-image-box {\r\n  margin-right: 1%;\r\n}\r\n\r\n/* 리뷰쓰기 css */\r\n#myform fieldset {\r\n  display: inline-block;\r\n  direction: rtl;\r\n  border: 0;\r\n  /* width: 500%; */\r\n  /* height: 300%; */\r\n}\r\n\r\n#myform fieldset legend {\r\n  text-align: right;\r\n}\r\n\r\n#myform input[type=\"radio\"] {\r\n  display: none;\r\n}\r\n\r\n#myform label {\r\n  font-size: 3em;\r\n  color: transparent;\r\n  text-shadow: 0 0 0 #f0f0f0;\r\n}\r\n\r\n#myform label:hover {\r\n  text-shadow: 0 0 0 rgba(250, 208, 0, 0.99);\r\n}\r\n\r\n#myform label:hover ~ label {\r\n  text-shadow: 0 0 0 rgba(250, 208, 0, 0.99);\r\n}\r\n\r\n#myform input[type=\"radio\"]:checked ~ label {\r\n  text-shadow: 0 0 0 rgba(250, 208, 0, 0.99);\r\n}\r\n\r\n#reviewContents {\r\n  width: 100%;\r\n  height: 150px;\r\n  padding: 10px;\r\n  box-sizing: border-box;\r\n  border: solid 1.5px #d3d3d3;\r\n  border-radius: 5px;\r\n  font-size: 16px;\r\n  resize: none;\r\n}\r\n\r\n.review-form {\r\n  padding-left: 0%;\r\n  margin-bottom: 5%;\r\n}\r\n\r\n.review-form-style {\r\n  color: #999;\r\n}\r\n\r\n.list {\r\n  text-align: left;\r\n  max-width: 750px;\r\n  margin: auto;\r\n}\r\n\r\n/* .small-thumnail {\r\n  width: 20%;\r\n  height: 50%;\r\n} */\r\n\r\n/* 테스트 추가 */\r\n.scale {\r\n  transform: scale(1);\r\n  -webkit-transform: scale(1);\r\n  -moz-transform: scale(1);\r\n  -ms-transform: scale(1);\r\n  -o-transform: scale(1);\r\n  transition: all 0.3s ease-in-out; /* 부드러운 모션을 위해 추가*/\r\n}\r\n\r\n.scale:hover {\r\n  transform: scale(1 z);\r\n  -webkit-transform: scale(1.2);\r\n  -moz-transform: scale(1.2);\r\n  -ms-transform: scale(1.2);\r\n  -o-transform: scale(1.2);\r\n}\r\n\r\n.img {\r\n  overflow: hidden;\r\n}\r\n\r\n/* 부모를 벗어나지 않고 내부 이미지만 확대 */\r\n\r\n/* TODO: 탑버튼 추가 _정주희*/\r\n.topbutton {\r\n  position: fixed;\r\n  bottom: 15px;\r\n  right: 15px;\r\n  width: 40px;\r\n  height: 40px;\r\n  z-index: 1;\r\n  opacity: 0.8;\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}