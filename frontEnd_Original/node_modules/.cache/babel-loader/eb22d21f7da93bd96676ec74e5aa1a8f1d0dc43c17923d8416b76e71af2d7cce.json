{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  data() {\n    return {\n      userData: {}\n    };\n  },\n  mounted() {\n    // SpringBoot 에서 토큰과 함께 userName, email 보냄 -> GET 방식\n    // 이 페이지에서 받아서 localStorage에 user 이름으로 저장\n    let url = new URL(window.location.href); // 현재 url 가져오기\n    console.log(url);\n    const urlParams = url.searchParams;\n    const accessToken = urlParams.get(\"accessToken\"); // url 에서 변수 값 받기\n    const username = urlParams.get(\"username\"); // url 에서 변수 값 받기\n    const email = urlParams.get(\"email\"); // url 에서 변수 값 받기\n    console.log(accessToken); // 확인\n    console.log(username); // 확인\n\n    // 임시 객체 생성\n    this.userData = {\n      accessToken: accessToken,\n      username: username,\n      email: email,\n      password: \"\",\n      tokenType: \"Bearer\",\n      roles: [\"ROLE_USER\"]\n    };\n\n    // localStorage에 키값 생성\n    localStorage.setItem(\"user\", JSON.stringify(this.userData));\n    // 공유 저장소 loggedIn 변수 값 변경\n    this.$store.commit('auth/loginSuccess', this.userData);\n    // 로그인 성공으로 간주 리다이렉트\n    this.$router.push(\"/profile\");\n  }\n};","map":{"version":3,"mappings":";AASA;EACAA;IACA;MACAC;IACA;EACA;EACAC;IACA;IACA;IACA;IACAC;IAEA;IACA;IACA;IACA;IACAA;IACAA;;IAEA;IACA;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;IACA;;IAEA;IACAC;IACA;IACA;IACA;IACA;EACA;AACA","names":["data","userData","mounted","console","accessToken","username","email","password","tokenType","roles","localStorage"],"sourceRoot":"src/views/kang","sources":["Auth2View.vue"],"sourcesContent":["<template>\r\n  <!-- TODO 3): 간편로그인 추가 , 리다이렉트 페이지 -->\r\n  <div className=\"col-md-12\">\r\n    <p>리다이렉트 페이지 입니다.</p>\r\n    {{ userData }}\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      userData: {},\r\n    };\r\n  },\r\n  mounted() {\r\n    // SpringBoot 에서 토큰과 함께 userName, email 보냄 -> GET 방식\r\n    // 이 페이지에서 받아서 localStorage에 user 이름으로 저장\r\n    let url = new URL(window.location.href); // 현재 url 가져오기\r\n    console.log(url);\r\n\r\n    const urlParams = url.searchParams;\r\n    const accessToken = urlParams.get(\"accessToken\"); // url 에서 변수 값 받기\r\n    const username = urlParams.get(\"username\"); // url 에서 변수 값 받기\r\n    const email = urlParams.get(\"email\"); // url 에서 변수 값 받기\r\n    console.log(accessToken); // 확인\r\n    console.log(username); // 확인\r\n\r\n    // 임시 객체 생성\r\n    this.userData = {\r\n      accessToken: accessToken,\r\n      username: username,\r\n      email: email,\r\n      password: \"\",\r\n      tokenType: \"Bearer\",\r\n      roles: [\"ROLE_USER\"],\r\n    };\r\n\r\n    // localStorage에 키값 생성\r\n    localStorage.setItem(\"user\", JSON.stringify(this.userData));\r\n    // 공유 저장소 loggedIn 변수 값 변경\r\n    this.$store.commit('auth/loginSuccess', this.userData);\r\n    // 로그인 성공으로 간주 리다이렉트\r\n    this.$router.push(\"/profile\");\r\n  },\r\n};\r\n</script>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}