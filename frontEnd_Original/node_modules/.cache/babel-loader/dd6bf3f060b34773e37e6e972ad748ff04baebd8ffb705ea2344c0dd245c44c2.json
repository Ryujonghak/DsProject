{"ast":null,"code":"// import custom from \"@/assets/js/custom.js\";\n// import FindIdVue from \"../find/FindId.vue\";\nimport User from \"@/model/user.js\";\nimport userService from \"@/services/user.service\";\nexport default {\n  data() {\n    return {\n      user: new User(),\n      // user 생성자 호출\n      username: \"\",\n      //id\n      name: \"\",\n      email: \"\",\n      answer: \"\",\n      //비밀번호찾기 문제 정답\n      loading: false,\n      // 로그인 버튼 활성화/비활성화 속성\n      message: \"\",\n      loginid: true,\n      //로그인 창\n      findid: false,\n      //아이디찾기 창\n      findpwd: false,\n      //비밀번호찾기 창\n      findsuccess: false,\n      // 아이디 찾기 성공창\n      findsuccessPwd: false,\n      // 새 비밀번호 창\n      password: \"\",\n      changePwd: false,\n      submitted: false,\n      // Find 용\n      findName: \"\",\n      findEmail: \"\",\n      findUsername: \"\",\n      findAnswer: \"\",\n      popupClose: true // 팝업창 자동 닫힘\n    };\n  },\n\n  computed: {\n    currentUser() {\n      return this.$store.state.auth.user;\n    },\n    // loggedIn 상태 확인\n    loggedIn() {\n      // this.$store.state.모듈명.state값\n      return this.$store.state.auth.status.loggedIn;\n    },\n    // ROLE_ADMIN 만 보이는 메뉴(함수)\n    showAdminBoard() {\n      if (this.currentUser && this.currentUser.roles) {\n        // if ROLE_ADMIN 있으면 true\n        //               없으면 false\n        return this.currentUser.roles.includes(\"ROLE_ADMIN\");\n      }\n      // currentUser 없으면 false (메뉴가 안보임)\n      return false;\n    }\n  },\n  methods: {\n    // 로그인 버튼 클릭시 실행되는 함수\n    handleLogin() {\n      // 로그인 로직 처리\n      this.loading = true;\n      // vee-validate 함수 findid처리 방법\n      this.$validator.validateAll().then(isValid => {\n        // validateAll() 모두 통과하면 -> isValid = true  (유효함)\n        //                             -> isValid = false (유효하지 않음)\n        if (!isValid) {\n          this.loading = false;\n          return; // 함수 탈출(break)\n        }\n\n        // isValid 가 true 이면 아래 로그인 실행(axios 실행)\n        if (this.user.username && this.user.password) {\n          // 공통함수 login 호출 :\n          // this.$store.dispatch(\"모듈명/함수명\", 매개변수)\n          this.$store.dispatch(\"auth/login\", this.user).then(() => {\n            alert(\"환영합니다\");\n            this.popupClose = !this.popupClose;\n            window.location.reload();\n            // this.currentUser();\n            // this.showAdminBoard();\n          })\n          // 참고) if/else 문 대신에 -> or(||) and(&&) 연산자를 사용할때도 있음\n          // 로직체크 순서 : true || false, false && true\n          // TODO: 정주희 alert창 추가 -> 수정 필요 FIXME:\n          .catch(error => {\n            // this.loading = false; // 로그인 버튼 활성화\n            alert(\"아이디,비밀번호를 확인하세요\");\n            this.message = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n          });\n        }\n      });\n    },\n    // 로그아웃 함수 -> 공통함수 호출\n    logout() {\n      // this.$store.dispatch(\"모듈명/함수명\")\n      this.$store.dispatch(\"auth/logout\"); // 공통함수 logout 호출\n      this.popupClose = !this.popupClose;\n      window.location.reload();\n      // this.$router.push(\"/\"); // 강제 홈화면으로 이동 TODO: 정주희 수정\n      this.adminlogin = false;\n    },\n    toggleShow() {\n      this.loginid = false;\n      this.findid = true;\n      this.findpwd = false;\n      this.findsuccess = false;\n      this.findsuccessPwd = false;\n    },\n    togglePwd() {\n      this.loginid = false;\n      this.findpwd = true;\n      this.findid = false;\n      this.findsuccess = false;\n      this.findsuccessPwd = false;\n    },\n    // 아이디찾기 취소버튼 눌릴시 로그인팝업으로\n    cancelfindid() {\n      this.loginid = true;\n      this.findid = false;\n      this.findpwd = false;\n      this.findsuccess = false;\n      this.findsuccessPwd = false;\n    },\n    // 패스워드 찾기 취소버튼 눌릴시 로그인팝업으로감\n    cancelfindpwd() {\n      this.loginid = true;\n      this.findid = false;\n      this.findpwd = false;\n      this.findsuccess = false;\n      this.findsuccessPwd = false;\n    },\n    //아이디찾기 버튼 클릭시 실행됨\n    id_search() {\n      var objName = document.getElementById(\"name\"); //아이디\n      var objEmail = document.getElementById(\"email\"); //이메일\n      if (objName.value == \"\") {\n        alert(\"이름을 입력해주세요.\");\n        return false;\n      } else {\n        if (objEmail.value == \"\") {\n          alert(\"이메일을 입력해주세요.\");\n          return false;\n        } else {\n          this.findsuccess = true;\n          this.loginid = false;\n          this.findid = false;\n          this.findpwd = false;\n          this.findsuccessPwd = false;\n          this.findById();\n        }\n      }\n    },\n    // 패스워드찾기 버튼 클릭시 실행됨\n    findpwd2() {\n      var objUsername = document.getElementById(\"username2\");\n      var objanswer = document.getElementById(\"answer\"); //answer\n      if (objUsername.value == \"\") {\n        alert(\"username 입력해주세요.\");\n        return false;\n      } else {\n        if (objanswer.value == \"\") {\n          alert(\"answer을 입력해주세요.\");\n          return false;\n        } else {\n          this.findByPwd();\n        }\n      }\n    },\n    // 로그인 성공시\n    successlogin() {\n      this.loginid = true;\n      this.findid = false;\n      this.findpwd = false;\n      this.findsuccess = false;\n      this.findsuccessPwd = false;\n    },\n    // 아이디 찾기\n    findById() {\n      this.findName = this.name;\n      this.findEmail = this.email;\n      userService.getFindByIdName(this.findName, this.findEmail).then(response => {\n        this.username = response.data.username;\n        // alert(response.data.username);\n        console.log(response.data.username);\n      }).catch(error => {\n        console.log(error);\n      });\n    },\n    // 비밀번호 확인 back으로 보내기\n    // TODO: 1222 수정\n    findByPwd() {\n      this.findUsername = this.username;\n      this.findAnswer = this.answer;\n      userService.getFindByPassword(this.findUsername, this.findAnswer).then(response => {\n        this.user = response.data;\n        console.log(this.user);\n        // var test = this.user;\n        // alert(JSON.stringify(test));\n        if (response.data.username == undefined) {\n          //비밀번호 실패시 팝업이 넘어가지 않음\n          this.loginid = false;\n          this.findid = false;\n          this.findpwd = true;\n          this.findsuccess = false;\n          this.findsuccessPwd = false;\n        } else {\n          //비밀번호 성공시 비밀번호 팝업이 뜸\n          this.loginid = false;\n          this.findid = false;\n          this.findpwd = false;\n          this.findsuccess = false;\n          this.findsuccessPwd = true;\n        }\n      }).catch(error => {\n        console.log(error);\n      });\n    },\n    // //새비밀번호 변경하기\n    // TODO:1222수정\n    updatePwd(id, changePwd, user) {\n      // this.user.id;\n      // this.changePwd = true;\n      // this.user;\n      this.message = \"\";\n      this.submitted = true;\n      user.password = this.password;\n      // var test = this.user;\n      // alert(JSON.stringify(test));\n      // form 유효성 체크 검사\n      // this.$validator.validate() : 유효하면 isValid = true , 아니면 isValid = false\n      // this.$validator.validate().then((isValid) => {\n      //   if (isValid) {\n      // user 값 초기화\n      // this.user = new User(\"\", \"\", \"\", this.role);\n      //  공유 저장소의 새사용자 등록 함수 실행\n      userService.update(id, changePwd, user).then(response => {\n        console.log(response.data);\n        alert(\"새로운 비밀번호로 변경되었습니다.\");\n        this.message = \"The password was updated successfully!\";\n      }).catch(e => {\n        console.log(e);\n      });\n      // }\n      // });\n    },\n\n    // changePassword(){\n    //   this.user.password=\"\";\n    //   this.changePwd=true;\n    // }\n    tohome() {\n      this.loginid = true;\n      this.findid = false;\n      this.findpwd = false;\n      this.findsuccess = false;\n      this.findsuccessPwd = false;\n    },\n    cancel() {\n      this.popupClose = !this.popupClose;\n      window.location.reload();\n    }\n  }\n};","map":{"version":3,"mappings":"AAycA;AACA;AACA;AACA;AAEA;EACAA;IACA;MACAC;MAAA;MACAC;MAAA;MACAC;MACAC;MACAC;MAAA;MACAC;MAAA;MACAC;MACAC;MAAA;MACAC;MAAA;MACAC;MAAA;MACAC;MAAA;MACAC;MAAA;MACAC;MACAC;MACAC;MACA;MACAC;MACAC;MACAC;MACAC;MACAC;IACA;EACA;;EACAC;IACAC;MACA;IACA;IACA;IACAC;MACA;MACA;IACA;IACA;IACAC;MACA;QACA;QACA;QACA;MACA;MACA;MACA;IACA;EACA;EACAC;IACA;IACAC;MACA;MACA;MACA;MACA;QACA;QACA;QACA;UACA;UACA;QACA;;QAEA;QACA;UACA;UACA;UACA,YACAC,kCACAC;YACAC;YACA;YACAC;YACA;YACA;UACA;UACA;UACA;UACA;UAAA,CACAC;YACA;YACAF;YACA,eACAG,kBACAA,uBACAA,+BACAA,iBACAA;UACA;QACA;MACA;IACA;IACA;IACAC;MACA;MACA;MACA;MACAH;MACA;MACA;IACA;IACAI;MACA;MACA;MACA;MACA;MACA;IACA;IACAC;MACA;MACA;MACA;MACA;MACA;IACA;IACA;IACAC;MACA;MACA;MACA;MACA;MACA;IACA;IACA;IACAC;MACA;MACA;MACA;MACA;MACA;IACA;IAEA;IACAC;MACA;MACA;MACA;QACAT;QACA;MACA;QACA;UACAA;UACA;QACA;UACA;UACA;UACA;UACA;UACA;UACA;QACA;MACA;IACA;IAEA;IACAU;MACA;MACA;MACA;QACAV;QACA;MACA;QACA;UACAA;UACA;QACA;UACA;QACA;MACA;IACA;IAEA;IACAW;MACA;MACA;MACA;MACA;MACA;IACA;IAEA;IACAC;MACA;MACA;MACAC,YACAC,+CACAf;QACA;QACA;QACAgB;MACA,GACAb;QACAa;MACA;IACA;IAEA;IACA;IACAC;MACA;MACA;MACAH,YACAI,sDACAlB;QACA;QACAgB;QACA;QACA;QACA;UACA;UACA;UACA;UACA;UACA;UACA;QACA;UACA;UACA;UACA;UACA;UACA;UACA;QACA;MACA,GACAb;QACAa;MACA;IACA;IAEA;IACA;IACAG;MACA;MACA;MACA;MACA;MACA;MACA9C;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACAyC,YACAM,4BACApB;QACAgB;QACAf;QACA;MACA,GACAE;QACAa;MACA;MACA;MACA;IACA;;IACA;IACA;IACA;IACA;IACAK;MACA;MACA;MACA;MACA;MACA;IACA;IAEAC;MACA;MACApB;IACA;EACA;AACA","names":["data","user","username","name","email","answer","loading","message","loginid","findid","findpwd","findsuccess","findsuccessPwd","password","changePwd","submitted","findName","findEmail","findUsername","findAnswer","popupClose","computed","currentUser","loggedIn","showAdminBoard","methods","handleLogin","dispatch","then","alert","window","catch","error","logout","toggleShow","togglePwd","cancelfindid","cancelfindpwd","id_search","findpwd2","successlogin","findById","userService","getFindByIdName","console","findByPwd","getFindByPassword","updatePwd","update","tohome","cancel"],"sourceRoot":"src/components/common","sources":["NavCom.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <!--end of preloading-->\r\n\r\n    <!--login form popup-->\r\n    <div class=\"login-wrapper\" id=\"login-content\" v-show=\"popupClose\">\r\n      <img\r\n        src=\"../../assets/images_kang/Components/common/Navcom/cancel-icon.png\"\r\n        alt=\"취소버튼\"\r\n        style=\"width: 30px; height: 30px; margin-left: 94%\"\r\n        @click=\"cancel()\"\r\n      />\r\n      <div class=\"login-content\" v-show=\"loginid\">\r\n        <h3>Login</h3>\r\n        <!--        <div @submit.prevent=\"handleLogin\">-->\r\n        <!--        로그인 수정-->\r\n        <div>\r\n          <div class=\"row\">\r\n            <label for=\"username\">\r\n              Username:\r\n              <input\r\n                type=\"text\"\r\n                name=\"username\"\r\n                id=\"username\"\r\n                placeholder=\"아이디를 입력하세요\"\r\n                v-model=\"user.username\"\r\n              />\r\n            </label>\r\n          </div>\r\n          <div class=\"row\">\r\n            <label for=\"password\">\r\n              Password:\r\n              <input\r\n                type=\"password\"\r\n                name=\"password\"\r\n                id=\"password\"\r\n                placeholder=\"비밀번호를 입력하세요\"\r\n                v-model=\"user.password\"\r\n              />\r\n            </label>\r\n          </div>\r\n\r\n          <div class=\"row\">\r\n            <div class=\"remember\" col-xs-12>\r\n              <button @click=\"toggleShow()\" class=\"findbtn\">\r\n                아이디찾기 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;|\r\n              </button>\r\n              <button @click=\"togglePwd()\" class=\"findbtn\">비밀번호찾기</button>\r\n            </div>\r\n          </div>\r\n          <div class=\"row\">\r\n            <button type=\"submit\" @click=\"handleLogin()\">Login</button>\r\n          </div>\r\n        </div>\r\n        <div class=\"row\">\r\n          <p>Or social login</p>\r\n          <div class=\"social-btn-2\">\r\n            <a\r\n              class=\"img-fluid\"\r\n              href=\"http://localhost:8000/oauth2/authorization/google\"\r\n              role=\"button\"\r\n              ><img\r\n                src=\"@/assets/images_kang/Components/common/Navcom/btn_googleSignUp.png\"\r\n                alt=\"\"\r\n            /></a>\r\n            <a\r\n              class=\"img-fluid\"\r\n              href=\"http://192.168.0.65:8000/oauth2/authorization/naver\"\r\n              role=\"button\"\r\n              ><img\r\n                src=\"@/assets/images_kang/Components/common/Navcom/btn_naverSignUp.png.png\"\r\n                alt=\"\"\r\n            /></a>\r\n            <a\r\n              class=\"img-fluid\"\r\n              href=\"http://localhost:8000/oauth2/authorization/kakao\"\r\n              role=\"button\"\r\n              ><img\r\n                src=\"@/assets/images_kang/Components/common/Navcom/btn_kakaoSignUp.png.png\"\r\n                alt=\"\"\r\n            /></a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <!-- 로그인 화면  -->\r\n\r\n      <!-- 아이디찾기 vshow -->\r\n      <div class=\"login-content\" v-show=\"findid\">\r\n        <a href=\"#\" class=\"close\">x</a>\r\n        <h3>아이디 찾기</h3>\r\n        <div>\r\n          <div class=\"row\">\r\n            <label for=\"name\">\r\n              Name:\r\n              <input\r\n                type=\"text\"\r\n                name=\"name\"\r\n                id=\"name\"\r\n                placeholder=\"이름을 입력하세요\"\r\n                v-model=\"name\"\r\n              />\r\n              <div\r\n                v-if=\"errors.has('name')\"\r\n                class=\"alert alert-danger\"\r\n                role=\"alert\"\r\n              >\r\n                name is required!\r\n              </div>\r\n            </label>\r\n          </div>\r\n          <div class=\"row\">\r\n            <label for=\"email\">\r\n              Email:\r\n              <input type=\"email\" name=\"email\" id=\"email\" v-model=\"email\" />\r\n            </label>\r\n          </div>\r\n          <div class=\"row\">\r\n            <button\r\n              type=\"submit\"\r\n              class=\"findid-btn\"\r\n              id=\"submit\"\r\n              name=\"enter\"\r\n              @click=\"id_search()\"\r\n            >\r\n              FIND ID\r\n            </button>\r\n            <button class=\"findid-btn\" @click=\"cancelfindid()\">취소</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <!-- 아이디찾기 vshow 끝 -->\r\n\r\n      <!-- 비밀번호찾기 vshow 시작 -->\r\n      <div class=\"login-content\" v-show=\"findpwd\">\r\n        <a href=\"#\" class=\"close\">x</a>\r\n        <h3>비밀번호 찾기</h3>\r\n        <div>\r\n          <div class=\"row\">\r\n            <label for=\"username\">\r\n              Username:\r\n              <input\r\n                type=\"text\"\r\n                name=\"username\"\r\n                id=\"username2\"\r\n                placeholder=\"아이디를 입력하세요\"\r\n                required\r\n                value=\"\"\r\n                v-model=\"username\"\r\n              />\r\n            </label>\r\n          </div>\r\n          <!-- 비밀번호 찾기 질문 -->\r\n          <div class=\"row\">\r\n            <label for=\"pwdquestion\">\r\n              pwd question:\r\n              <span class=\"signup-input\">\r\n                <select\r\n                  id=\"signup-birth-mm\"\r\n                  class=\"selectbox\"\r\n                  name=\"findpwd\"\r\n                  style=\"width: 100%\"\r\n                  required\r\n                  value=\"\"\r\n                >\r\n                  <option value=\"ko\" selected>나의 고향은?</option>\r\n                  <option value=\"ko\">어머니의 성함은?</option>\r\n                  <option value=\"ko\">아버지의 성함은?</option>\r\n                </select>\r\n              </span>\r\n            </label>\r\n          </div>\r\n          <!-- 비밀번호 찾기 대답 -->\r\n          <div class=\"row\">\r\n            <label for=\"answer\">\r\n              Pwd answer:\r\n              <input\r\n                type=\"text\"\r\n                name=\"answer\"\r\n                id=\"answer\"\r\n                required\r\n                v-model=\"answer\"\r\n              />\r\n            </label>\r\n          </div>\r\n          <div class=\"row\">\r\n            <button\r\n              type=\"submit\"\r\n              id=\"submit\"\r\n              class=\"find-btn\"\r\n              @click=\"findpwd2()\"\r\n            >\r\n              FIND PWD\r\n            </button>\r\n            <button class=\"findid-btn\" @click=\"cancelfindpwd()\">취소</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <!-- 비밀번호찾기 vshow 끝 -->\r\n\r\n      <!-- 아이디찾기 성공시 뜨는 팝업 시작 -->\r\n      <div class=\"login-content\" v-show=\"findsuccess\">\r\n        <!-- <a href=\"\" class=\"close\">x</a> -->\r\n        <h3>아이디 찾기</h3>\r\n        <div>\r\n          <div class=\"row\">\r\n            <label for=\"name\">\r\n              고객님의 아이디는 {{ username }} 입니다.\r\n              <!-- 고객님의 아이디는 user.username 입니다. -->\r\n            </label>\r\n          </div>\r\n          <!-- <div class=\"row\">\r\n            <label for=\"textbox\">\r\n              <input\r\n                type=\"text\"\r\n                name=\"hidden\"\r\n                id=\"hidden\"\r\n                required\r\n              />\r\n            </label>\r\n          </div> -->\r\n          <div class=\"row\">\r\n            <button type=\"submit\" @click=\"successlogin()\">Login</button>\r\n          </div>\r\n          <!-- <li v-if=\"!currentUser\" class=\"loginLink\">\r\n                  <a href=\"#\">LOG In</a>\r\n                </li> -->\r\n        </div>\r\n      </div>\r\n      <!-- 아이디찾기 성공시 뜨는 팝업 끝  -->\r\n\r\n      <!-- 패스워드찾기 성공시 뜨는 팝업 시작 -->\r\n      <div class=\"login-content\" v-show=\"findsuccessPwd\">\r\n        <!-- <a href=\"\" class=\"close\">x</a> -->\r\n        <h3>비밀번호 찾기</h3>\r\n        <div>\r\n          <div class=\"row\">\r\n            <label for=\"password\">\r\n              새로운 Password:\r\n              <input\r\n                type=\"password\"\r\n                name=\"password\"\r\n                id=\"password\"\r\n                v-model=\"password\"\r\n              />\r\n            </label>\r\n          </div>\r\n          <div class=\"row\">\r\n            <button type=\"submit\" @click=\"updatePwd(user.id, changePwd, user)\">\r\n              수정하기\r\n            </button>\r\n            <button class=\"tohomelogin\" @click=\"tohome()\">로그인 하기</button>\r\n          </div>\r\n          <p>{{ message }}</p>\r\n        </div>\r\n      </div>\r\n      <!-- 패스워드찾기 성공시 뜨는 팝업 끝  -->\r\n    </div>\r\n    <!--end of login form popup-->\r\n    <!-- BEGIN | Header -->\r\n    <header class=\"ht-header\">\r\n      <div class=\"container\">\r\n        <nav class=\"navbar navbar-default navbar-custom\">\r\n          <!-- Collect the nav links, forms, and other content for toggling -->\r\n          <div\r\n            class=\"collapse navbar-collapse flex-parent\"\r\n            id=\"bs-example-navbar-collapse-1\"\r\n          >\r\n            <!-- 로고 -->\r\n            <div class=\"col-xs-2\">\r\n              <!-- Brand and toggle get grouped for better mobile display -->\r\n              <div class=\"navbar-header\">\r\n                <div\r\n                  class=\"navbar-toggle\"\r\n                  data-toggle=\"collapse\"\r\n                  data-target=\"#bs-example-navbar-collapse-1\"\r\n                >\r\n                  <span class=\"sr-only\">Toggle navigation</span>\r\n                  <div id=\"nav-icon1\">\r\n                    <span></span>\r\n                    <span></span>\r\n                    <span></span>\r\n                  </div>\r\n                </div>\r\n                <router-link to=\"/\">\r\n                  <img\r\n                    class=\"logo\"\r\n                    src=\"@/assets/images_kang/Components/common/Navcom/Logo_test13.png\"\r\n                    width=\"119\"\r\n                    height=\"58\"\r\n                /></router-link>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-xs-5 navbar-menu\" style=\"padding-left:0%\">\r\n              <ul\r\n                class=\"col-xs-12 nav navbar-nav flex-child-menu menu-left\"\r\n                style=\"text-align: center; margin-left: 0%\"\r\n              >\r\n                <li>\r\n                  <router-link to=\"/allMovie\">전체보기</router-link>\r\n                </li>\r\n                <li class=\"dropdown first\">\r\n                  <a\r\n                    class=\"btn btn-default dropdown-toggle lv1 happy\"\r\n                    data-toggle=\"dropdown\"\r\n                    data-hover=\"dropdown\"\r\n                  >\r\n                    영화관<i\r\n                      class=\"fa fa-angle-down\"\r\n                      aria-hidden=\"true\"\r\n                      style=\"margin-left: 0%\"\r\n                    ></i>\r\n                  </a>\r\n                  <ul class=\"dropdown-menu level1\">\r\n                    <li>\r\n                      <router-link to=\"/SeomyeonCinema\">서면</router-link>\r\n                    </li>\r\n                    <li>\r\n                      <router-link to=\"/CentumCinema\">센텀시티</router-link>\r\n                    </li>\r\n                    <li>\r\n                      <router-link to=\"/BusanCinema\">부산대</router-link>\r\n                    </li>\r\n                    <li>\r\n                      <router-link to=\"/theaterBusan\">전체 상영관</router-link>\r\n                    </li>\r\n                  </ul>\r\n                </li>\r\n                <!-- 고객센터 -->\r\n                <li class=\"dropdown first\" style=\"padding-right: 0%\">\r\n                  <a\r\n                    class=\"btn btn-default dropdown-toggle lv1\"\r\n                    data-toggle=\"dropdown\"\r\n                    data-hover=\"dropdown\"\r\n                  >\r\n                    고객센터\r\n                    <i class=\"fa fa-angle-down\" aria-hidden=\"true\"></i>\r\n                  </a>\r\n                  <ul class=\"dropdown-menu level1\">\r\n                    <li>\r\n                      <router-link to=\"/notice\">공지사항</router-link>\r\n                    </li>\r\n                    <li>\r\n                      <router-link to=\"/faq\">FAQ</router-link>\r\n                    </li>\r\n                    <li>\r\n                      <router-link to=\"/addqna\">QNA</router-link>\r\n                    </li>\r\n                  </ul>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n            <!-- 오른쪾메뉴 -->\r\n            <div class=\"col-xs-5 navbar-menu\">\r\n              <ul class=\"nav navbar-nav flex-child-menu menu-right col-xs-12\">\r\n                <li class=\"first-space\"></li>\r\n                <!-- TODO: 회원 로그인시 마이페이지 : 비로그인시 마이페이지 숨김 -->\r\n                <div class=\"second-space\" style=\"padding-left: 5%;\" v-show=\"currentUser\">\r\n                  <!-- 회원 로그인시 마이페이지 : 로그인 user일시 admin 메뉴 숨김 -->\r\n                  <li class=\"dropdown first\" v-show=\"!showAdminBoard\">\r\n                    <router-link to=\"/mypage\"\r\n                      class=\"btn btn-default dropdown-toggle lv1\"\r\n                      data-toggle=\"dropdown\"\r\n                      data-hover=\"dropdown\"\r\n                    >\r\n                      MY PAGE\r\n                      <i class=\"fa fa-angle-down\" aria-hidden=\"true\"></i>\r\n                    </router-link>\r\n                    <ul class=\"dropdown-menu level1\">\r\n                      <li>\r\n                        <router-link to=\"/mypage\">내정보</router-link>\r\n                      </li>\r\n                      <li>\r\n                        <router-link to=\"/myticket\">나의예매내역</router-link>\r\n                      </li>\r\n                    </ul>\r\n                  </li>\r\n                  <!-- 회원 로그인시 마이페이지 끝  -->\r\n                  <!-- 어드민 로그인시 어드민 나브바 시작-->\r\n                  <li\r\n                    class=\"dropdown first\"\r\n                    \r\n                    v-show=\"showAdminBoard\"\r\n                  >\r\n                    <a\r\n                      class=\"btn btn-default dropdown-toggle lv1\"\r\n                      data-toggle=\"dropdown\"\r\n                      data-hover=\"dropdown\"\r\n                    >\r\n                      ADMIN <i class=\"fa fa-angle-down\" aria-hidden=\"true\"></i>\r\n                    </a>\r\n                    <ul class=\"dropdown-menu level1\">\r\n                      <li>\r\n                        <router-link to=\"/userInfoAdmin\">회원관리</router-link>\r\n                      </li>\r\n                      <li>\r\n                        <router-link to=\"/board-admin\">게시판관리</router-link>\r\n                      </li>\r\n                      <li>\r\n                        <router-link to=\"/schedule-admin\">스케쥴관리</router-link>\r\n                      </li>\r\n                      <li>\r\n                        <router-link to=\"/payment-admin\">예매관리</router-link>\r\n                      </li>\r\n                    </ul>\r\n                  </li>\r\n                  <!-- 어드민 로그인시 어드민 나브바 끝-->\r\n                </div>\r\n\r\n                <!-- 로그인 회원가입 창 -->\r\n\r\n                <li\r\n                  v-show=\"!currentUser\"\r\n                  class=\"loginLink second-space\"\r\n                  style=\"text-align: right; padding-left: 0%\"\r\n                >\r\n                  <a href=\"#\">LOG In</a>\r\n                </li>\r\n\r\n                <li\r\n                  v-show=\"!currentUser\"\r\n                  class=\"btn signupLink third-space\"\r\n                  style=\"width: 100px; text-align: center;\"\r\n                >\r\n                  <router-link to=\"/signup\">sign up</router-link>\r\n                </li>\r\n\r\n                <!-- 로그인성공시 signup -> logout변경 -->\r\n                <!-- <div v-if=\"currentUser\"> -->\r\n                <li\r\n                  v-show=\"currentUser\"\r\n                  class=\"dropdown first logoutLink third-space\"\r\n                  style=\"margin-left: 3%\"\r\n                  id=\"logoutlink\"\r\n                >\r\n                  <a\r\n                    class=\"btn btn-default dropdown-toggle lv1\"\r\n                    style=\"width: 96.1px\"\r\n                    data-toggle=\"dropdown\"\r\n                    data-hover=\"dropdown\"\r\n                    href=\"#\"\r\n                    @click.prevent=\"logout\"\r\n                    >LOG Out</a\r\n                  >\r\n                </li>\r\n                <!-- </div> -->\r\n              </ul>\r\n            </div>\r\n          </div>\r\n          <!-- <!— <!— /.navbar-collapse —> —> -->\r\n        </nav>\r\n      </div>\r\n    </header>\r\n    <!-- <!— <!— END | Header —> —> -->\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n// import custom from \"@/assets/js/custom.js\";\r\n// import FindIdVue from \"../find/FindId.vue\";\r\nimport User from \"@/model/user.js\";\r\nimport userService from \"@/services/user.service\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      user: new User(), // user 생성자 호출\r\n      username: \"\", //id\r\n      name: \"\",\r\n      email: \"\",\r\n      answer: \"\", //비밀번호찾기 문제 정답\r\n      loading: false, // 로그인 버튼 활성화/비활성화 속성\r\n      message: \"\",\r\n      loginid: true, //로그인 창\r\n      findid: false, //아이디찾기 창\r\n      findpwd: false, //비밀번호찾기 창\r\n      findsuccess: false, // 아이디 찾기 성공창\r\n      findsuccessPwd: false, // 새 비밀번호 창\r\n      password: \"\",\r\n      changePwd: false,\r\n      submitted: false,\r\n      // Find 용\r\n      findName: \"\",\r\n      findEmail: \"\",\r\n      findUsername: \"\",\r\n      findAnswer: \"\",\r\n      popupClose: true, // 팝업창 자동 닫힘\r\n    };\r\n  },\r\n  computed: {\r\n    currentUser() {\r\n      return this.$store.state.auth.user;\r\n    },\r\n    // loggedIn 상태 확인\r\n    loggedIn() {\r\n      // this.$store.state.모듈명.state값\r\n      return this.$store.state.auth.status.loggedIn;\r\n    },\r\n    // ROLE_ADMIN 만 보이는 메뉴(함수)\r\n    showAdminBoard() {\r\n      if (this.currentUser && this.currentUser.roles) {\r\n        // if ROLE_ADMIN 있으면 true\r\n        //               없으면 false\r\n        return this.currentUser.roles.includes(\"ROLE_ADMIN\");\r\n      }\r\n      // currentUser 없으면 false (메뉴가 안보임)\r\n      return false;\r\n    },\r\n  },\r\n  methods: {\r\n    // 로그인 버튼 클릭시 실행되는 함수\r\n    handleLogin() {\r\n      // 로그인 로직 처리\r\n      this.loading = true;\r\n      // vee-validate 함수 findid처리 방법\r\n      this.$validator.validateAll().then((isValid) => {\r\n        // validateAll() 모두 통과하면 -> isValid = true  (유효함)\r\n        //                             -> isValid = false (유효하지 않음)\r\n        if (!isValid) {\r\n          this.loading = false;\r\n          return; // 함수 탈출(break)\r\n        }\r\n\r\n        // isValid 가 true 이면 아래 로그인 실행(axios 실행)\r\n        if (this.user.username && this.user.password) {\r\n          // 공통함수 login 호출 :\r\n          // this.$store.dispatch(\"모듈명/함수명\", 매개변수)\r\n          this.$store\r\n            .dispatch(\"auth/login\", this.user)\r\n            .then(() => {\r\n              alert(\"환영합니다\");\r\n              this.popupClose = !this.popupClose;\r\n              window.location.reload();\r\n              // this.currentUser();\r\n              // this.showAdminBoard();\r\n            })\r\n            // 참고) if/else 문 대신에 -> or(||) and(&&) 연산자를 사용할때도 있음\r\n            // 로직체크 순서 : true || false, false && true\r\n            // TODO: 정주희 alert창 추가 -> 수정 필요 FIXME:\r\n            .catch((error) => {\r\n              // this.loading = false; // 로그인 버튼 활성화\r\n              alert(\"아이디,비밀번호를 확인하세요\");\r\n              this.message =\r\n                (error.response &&\r\n                  error.response.data &&\r\n                  error.response.data.message) ||\r\n                error.message ||\r\n                error.toString();\r\n            });\r\n        }\r\n      });\r\n    },\r\n    // 로그아웃 함수 -> 공통함수 호출\r\n    logout() {\r\n      // this.$store.dispatch(\"모듈명/함수명\")\r\n      this.$store.dispatch(\"auth/logout\"); // 공통함수 logout 호출\r\n      this.popupClose = !this.popupClose;\r\n      window.location.reload();\r\n      // this.$router.push(\"/\"); // 강제 홈화면으로 이동 TODO: 정주희 수정\r\n      this.adminlogin = false;\r\n    },\r\n    toggleShow() {\r\n      this.loginid = false;\r\n      this.findid = true;\r\n      this.findpwd = false;\r\n      this.findsuccess = false;\r\n      this.findsuccessPwd = false;\r\n    },\r\n    togglePwd() {\r\n      this.loginid = false;\r\n      this.findpwd = true;\r\n      this.findid = false;\r\n      this.findsuccess = false;\r\n      this.findsuccessPwd = false;\r\n    },\r\n    // 아이디찾기 취소버튼 눌릴시 로그인팝업으로\r\n    cancelfindid() {\r\n      this.loginid = true;\r\n      this.findid = false;\r\n      this.findpwd = false;\r\n      this.findsuccess = false;\r\n      this.findsuccessPwd = false;\r\n    },\r\n    // 패스워드 찾기 취소버튼 눌릴시 로그인팝업으로감\r\n    cancelfindpwd() {\r\n      this.loginid = true;\r\n      this.findid = false;\r\n      this.findpwd = false;\r\n      this.findsuccess = false;\r\n      this.findsuccessPwd = false;\r\n    },\r\n\r\n    //아이디찾기 버튼 클릭시 실행됨\r\n    id_search() {\r\n      var objName = document.getElementById(\"name\"); //아이디\r\n      var objEmail = document.getElementById(\"email\"); //이메일\r\n      if (objName.value == \"\") {\r\n        alert(\"이름을 입력해주세요.\");\r\n        return false;\r\n      } else {\r\n        if (objEmail.value == \"\") {\r\n          alert(\"이메일을 입력해주세요.\");\r\n          return false;\r\n        } else {\r\n          this.findsuccess = true;\r\n          this.loginid = false;\r\n          this.findid = false;\r\n          this.findpwd = false;\r\n          this.findsuccessPwd = false;\r\n          this.findById();\r\n        }\r\n      }\r\n    },\r\n\r\n    // 패스워드찾기 버튼 클릭시 실행됨\r\n    findpwd2() {\r\n      var objUsername = document.getElementById(\"username2\");\r\n      var objanswer = document.getElementById(\"answer\"); //answer\r\n      if (objUsername.value == \"\") {\r\n        alert(\"username 입력해주세요.\");\r\n        return false;\r\n      } else {\r\n        if (objanswer.value == \"\") {\r\n          alert(\"answer을 입력해주세요.\");\r\n          return false;\r\n        } else {\r\n          this.findByPwd();\r\n        }\r\n      }\r\n    },\r\n\r\n    // 로그인 성공시\r\n    successlogin() {\r\n      this.loginid = true;\r\n      this.findid = false;\r\n      this.findpwd = false;\r\n      this.findsuccess = false;\r\n      this.findsuccessPwd = false;\r\n    },\r\n\r\n    // 아이디 찾기\r\n    findById() {\r\n      this.findName = this.name;\r\n      this.findEmail = this.email;\r\n      userService\r\n        .getFindByIdName(this.findName, this.findEmail)\r\n        .then((response) => {\r\n          this.username = response.data.username;\r\n          // alert(response.data.username);\r\n          console.log(response.data.username);\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    },\r\n\r\n    // 비밀번호 확인 back으로 보내기\r\n    // TODO: 1222 수정\r\n    findByPwd() {\r\n      this.findUsername = this.username;\r\n      this.findAnswer = this.answer;\r\n      userService\r\n        .getFindByPassword(this.findUsername, this.findAnswer)\r\n        .then((response) => {\r\n          this.user = response.data;\r\n          console.log(this.user);\r\n          // var test = this.user;\r\n          // alert(JSON.stringify(test));\r\n          if (response.data.username == undefined) {\r\n            //비밀번호 실패시 팝업이 넘어가지 않음\r\n            this.loginid = false;\r\n            this.findid = false;\r\n            this.findpwd = true;\r\n            this.findsuccess = false;\r\n            this.findsuccessPwd = false;\r\n          } else {\r\n            //비밀번호 성공시 비밀번호 팝업이 뜸\r\n            this.loginid = false;\r\n            this.findid = false;\r\n            this.findpwd = false;\r\n            this.findsuccess = false;\r\n            this.findsuccessPwd = true;\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    },\r\n\r\n    // //새비밀번호 변경하기\r\n    // TODO:1222수정\r\n    updatePwd(id, changePwd, user) {\r\n      // this.user.id;\r\n      // this.changePwd = true;\r\n      // this.user;\r\n      this.message = \"\";\r\n      this.submitted = true;\r\n      user.password = this.password;\r\n      // var test = this.user;\r\n      // alert(JSON.stringify(test));\r\n      // form 유효성 체크 검사\r\n      // this.$validator.validate() : 유효하면 isValid = true , 아니면 isValid = false\r\n      // this.$validator.validate().then((isValid) => {\r\n      //   if (isValid) {\r\n      // user 값 초기화\r\n      // this.user = new User(\"\", \"\", \"\", this.role);\r\n      //  공유 저장소의 새사용자 등록 함수 실행\r\n      userService\r\n        .update(id, changePwd, user)\r\n        .then((response) => {\r\n          console.log(response.data);\r\n          alert(\"새로운 비밀번호로 변경되었습니다.\");\r\n          this.message = \"The password was updated successfully!\";\r\n        })\r\n        .catch((e) => {\r\n          console.log(e);\r\n        });\r\n      // }\r\n      // });\r\n    },\r\n    // changePassword(){\r\n    //   this.user.password=\"\";\r\n    //   this.changePwd=true;\r\n    // }\r\n    tohome() {\r\n      this.loginid = true;\r\n      this.findid = false;\r\n      this.findpwd = false;\r\n      this.findsuccess = false;\r\n      this.findsuccessPwd = false;\r\n    },\r\n\r\n    cancel() {\r\n      this.popupClose = !this.popupClose;\r\n      window.location.reload();\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.navbar-menu {\r\n  margin-top: 2%;\r\n}\r\n\r\n.img-fluid {\r\n  margin: 1%;\r\n}\r\n\r\nheader .navbar-default .navbar-nav li a {\r\n  font-family: \"Dosis\", sans-serif;\r\n  /* font-size: 14px; */\r\n  color: #abb7c4;\r\n  font-weight: bold;\r\n  text-transform: uppercase;\r\n  cursor: pointer;\r\n}\r\n\r\n// TODO: 정주희 width: 50% -> 60% 수정(윈도우에서는 두줄로 떠서 위치조정함) -> 70%으로 다시 수정\r\n.remember {\r\n  width: 70%;\r\n  float: right !important;\r\n}\r\n\r\n.findbtn {\r\n  margin-bottom: 2%;\r\n}\r\n\r\n.findbtn {\r\n  background: none !important;\r\n  color: black !important;\r\n}\r\n\r\n.findid-btn {\r\n  margin-bottom: 2%;\r\n}\r\n\r\n.find-btn {\r\n  margin-bottom: 2% !important;\r\n}\r\n\r\ninput {\r\n  text-transform: lowercase !important;\r\n}\r\n\r\n.tohomelogin {\r\n  background: none !important;\r\n  color: black !important;\r\n}\r\n\r\n#logoutlink {\r\n  justify-content: end !important;\r\n}\r\n\r\n.nav .navbar-nav .flex-child-menu .menu-right .col {\r\n  justify-content: space-between !important;\r\n}\r\n.menu-left li {\r\n  margin-left: 5%;\r\n}\r\n.first-space {\r\n  width: 100px;\r\n}\r\n.second-space {\r\n  margin-right: 5%;\r\n} \r\n</style>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}