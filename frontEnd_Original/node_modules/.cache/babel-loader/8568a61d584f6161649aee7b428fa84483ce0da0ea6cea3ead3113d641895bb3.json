{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport UserService from \"@/services/user.service.js\";\nexport default {\n  mounted() {\n    this.retrieveUser();\n\n    // 모달 테스트\n    const modal = document.getElementById(\"modal\");\n    function modalOn() {\n      modal.style.display = \"flex\";\n    }\n    function isModalOn() {\n      return modal.style.display === \"flex\";\n    }\n    function modalOff() {\n      modal.style.display = \"none\";\n    }\n    const btnModal = document.getElementById(\"btn-modal\");\n    btnModal.addEventListener(\"click\", e => {\n      modalOn(e);\n    });\n    const closeBtn2 = modal.querySelector(\".closebtn\");\n    closeBtn2.addEventListener(\"click\", e => {\n      modalOff(e);\n    });\n    modal.addEventListener(\"click\", e => {\n      const evTarget = e.target;\n      if (evTarget.classList.contains(\"modal-overlay\")) {\n        modalOff(e);\n      }\n    });\n    window.addEventListener(\"keyup\", e => {\n      if (isModalOn() && e.key === \"Escape\") {\n        modalOff(e);\n      }\n    });\n  },\n  data() {\n    return {\n      // 게시판관리 v-show\n      board: false,\n      user: [],\n      currentUser: null,\n      searchUsername: \"\",\n      message: \"\",\n      // 페이징을 위한 변수 정의\n      page: 1,\n      // 현재 페이지\n      count: 0,\n      // 전체 데이터 건수\n      pageSize: 3,\n      // 한페이지당 몇개를 화면에 보여줄지 결정하는 변수\n\n      pageSizes: [3, 6, 9] // select box 에 넣을 기본 데이터\n    };\n  },\n\n  methods: {\n    //왼쪽 메뉴바 slide효과\n    boardclick() {\n      this.board = !this.board;\n    },\n    logout() {\n      this.$store.dispatch(\"auth/logout\");\n      this.$router.push(\"/\");\n    },\n    retrieveUser() {\n      UserService.getAll(this.searchUsername, this.page - 1, this.pageSize).then(response => {\n        const {\n          user,\n          totalItems\n        } = response.data;\n        this.user = user;\n        this.count = totalItems;\n        console.log(response.data);\n      }).catch(e => {\n        alert(\"then 못 가고 실패\");\n        console.log(e);\n      });\n    },\n    // currentUser 에 데이터 넣고 첫 모달창 열어주는 함수\n    modal(data) {\n      this.currentUser = data;\n      const modal = document.getElementById(\"modal\");\n      modal.style.display = \"flex\";\n    },\n    deleteUser() {\n      UserService.delete(this.currentUser.id).then(response => {\n        console.log(response.data);\n        // this.retrieveUser();\n        this.user.splice(this.user.indexOf(this.currentUser.id), 1);\n        console.log(\"*********8\");\n        console.log(this.user);\n        console.log(\"********8\");\n\n        // 모달 끄기\n        const modal = document.getElementById(\"modal\");\n        modal.style.display = \"none\";\n      }).catch(e => {\n        console.log(e);\n        // window.location.reload();\n      });\n    },\n\n    handlePageSizeChange(event) {\n      this.pageSize = event.target.value; // 한페이지당 개수 저장(3, 6, 9)\n      this.page = 1;\n      // 재조회 함수 호출\n      this.retrieveUser();\n    },\n    // 페이지 번호 변경시 실행되는 함수(재조회)\n    handlePageChange(value) {\n      this.page = value; // 매개변수값으로 현재페이지 변경\n      // 재조회 함수 호출\n      this.retrieveUser();\n    }\n  }\n};","map":{"version":3,"mappings":";AAyKA;AAEA;EACAA;IACA;;IAEA;IACA;IAEA;MACAC;IACA;IAEA;MACA;IACA;IAEA;MACAA;IACA;IACA;IACAC;MACAC;IACA;IACA;IACAC;MACAC;IACA;IACAJ;MACA;MACA;QACAI;MACA;IACA;IACAC;MACA;QACAD;MACA;IACA;EACA;EACAE;IACA;MACA;MACAC;MACAC;MACAC;MACAC;MACAC;MAEA;MACAC;MAAA;MACAC;MAAA;MACAC;MAAA;;MAEAC;IACA;EACA;;EACAC;IACA;IACAC;MACA;IACA;IACAC;MACA;MACA;IACA;IACAC;MACAC,sEACAC;QACA;UAAAb;UAAAc;QAAA;QACA;QACA;QAEAC;MACA,GACAC;QACAC;QACAF;MACA;IACA;IACA;IACAvB;MACA;MAEA;MACAA;IACA;IACA0B;MACAN,wCACAC;QACAE;QACA;QACA;QACAA;QACAA;QACAA;;QAEA;QACA;QACAvB;MACA,GACAwB;QACAD;QACA;MACA;IACA;;IACAI;MACA;MACA;MACA;MACA;IACA;IACA;IACAC;MACA;MACA;MACA;IACA;EACA;AACA","names":["mounted","modal","btnModal","modalOn","closeBtn2","modalOff","window","data","board","user","currentUser","searchUsername","message","page","count","pageSize","pageSizes","methods","boardclick","logout","retrieveUser","UserService","then","totalItems","console","catch","alert","deleteUser","handlePageSizeChange","handlePageChange"],"sourceRoot":"src/components/admin","sources":["UserInfoCom.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"hero user-hero\">\r\n      <div class=\"container\">\r\n        <div class=\"row\">\r\n          <div class=\"col-md-12\">\r\n            <div class=\"hero-ct\">\r\n              <h1>ADMIN PAGE</h1>\r\n              <h4>회원 관리 페이지</h4>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"page-single\">\r\n      <div class=\"container\">\r\n        <div class=\"row ipad-width2\">\r\n          <!-- <!— 왼쪽 메뉴바 시작 —> -->\r\n          <div class=\"col-md-3 col-sm-12 col-xs-12\">\r\n            <div class=\"user-information\">\r\n              <div class=\"user-fav\">\r\n                <p>관리자 목록</p>\r\n                <ul>\r\n                  <li class=\"active\">\r\n                    <router-link to=\"/userInfoAdmin\">회원관리</router-link>\r\n                  </li>\r\n                  <li>\r\n                    <a href=\"#\"></a>\r\n                    <a data-toggle=\"dropdown\" @click=\"boardclick\">\r\n                      게시판관리\r\n                      <i class=\"fa fa-angle-down\" aria-hidden=\"true\"></i>\r\n                    </a>\r\n                    <ul class=\"dropdown\" v-show=\"board\">\r\n                      <li>\r\n                        <router-link to=\"/board-admin\"\r\n                          >공지사항 관리</router-link\r\n                        >\r\n                      </li>\r\n                      <li>\r\n                        <router-link to=\"/movie-admin\">영화 관리</router-link>\r\n                      </li>\r\n                      <li>\r\n                        <router-link to=\"/review-admin\">리뷰관리</router-link>\r\n                      </li>\r\n                      <li>\r\n                        <router-link to=\"/qna-admin\">QnA 답변관리</router-link>\r\n                      </li>\r\n                    </ul>\r\n                  </li>\r\n                  <li>\r\n                    <router-link to=\"/schedule-admin\">스케쥴 관리</router-link>\r\n                  </li>\r\n                  <li>\r\n                    <router-link to=\"/payment-admin\">예매 내역</router-link>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n              <div class=\"user-fav\">\r\n                <ul>\r\n                  <!-- <a @click.prevent=\"logout\">LOG OUT</a> -->\r\n                  <li><a href=\"#\" @click=\"logout\">Log out</a></li>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <!-- <!— 왼쪽 메뉴바 끝 —> -->\r\n          <div class=\"col-md-9 col-sm-12 col-xs-12\">\r\n            <!-- <a id=\"btn-modal\" class=\"delbtn col-xs-12\">삭제</a> -->\r\n            <!-- TODO: 바로 밑 div 데이터 받아서 v-for 예정입니다. -->\r\n            <div class=\"col-xs-12\" v-for=\"(data, index) in user\" :key=\"index\">\r\n              <div class=\"movie-item-style-2 userrate\">\r\n                <div class=\"mv-item-infor col-xs-9\">\r\n                  <div>\r\n                    <div>\r\n                      <h6>\r\n                        {{ data.id }}\r\n                      </h6>\r\n                    </div>\r\n                    <div class=\"col-xs-6\">\r\n                      <p>아이디 :</p>\r\n                    </div>\r\n                    <div class=\"col-xs-6\">\r\n                      <p>{{ data.username }}</p>\r\n                    </div>\r\n                    <div class=\"col-xs-6\">\r\n                      <p>비밀번호 질문 확인 :</p>\r\n                    </div>\r\n                    <div class=\"col-xs-6\">\r\n                      <p>{{ data.answer }}</p>\r\n                    </div>\r\n                    <div class=\"col-xs-6\">\r\n                      <p>생년월일 :</p>\r\n                    </div>\r\n                    <div class=\"col-xs-6\">\r\n                      <p>\r\n                        {{ data.year }} &nbsp;/&nbsp;\r\n                        {{ data.month }} &nbsp;/&nbsp;\r\n                        {{ data.day }}\r\n                      </p>\r\n                    </div>\r\n                    <div class=\"col-xs-6\">\r\n                      <p>이메일 :</p>\r\n                    </div>\r\n                    <div class=\"col-xs-6\">\r\n                      <p>{{ data.email }}</p>\r\n                    </div>\r\n                    <div class=\"col-xs-6\">\r\n                      <p>휴대전화 :</p>\r\n                    </div>\r\n                    <div class=\"col-xs-6\">\r\n                      <p>{{ data.phone }}</p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-xs-3\">\r\n                  <router-link\r\n                    :to=\"'/userInfoAdmin/' + data.username\"\r\n                    class=\"editbtn col-xs-12\"\r\n                    >수정</router-link\r\n                  >\r\n                  <div class=\"col-xs-12\"></div>\r\n                  <a\r\n                    id=\"btn-modal\"\r\n                    class=\"delbtn col-xs-12\"\r\n                    @click=\"modal(data)\"\r\n                    >삭제</a\r\n                  >\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <!-- Todo : page 바 시작 -->\r\n            <div class=\"col-md-12\">\r\n              <b-pagination\r\n                v-model=\"page\"\r\n                :total-rows=\"count\"\r\n                :per-page=\"pageSize\"\r\n                prev-text=\"<\"\r\n                next-text=\">\"\r\n                @change=\"handlePageChange\"\r\n              ></b-pagination>\r\n            </div>\r\n            <!-- Todo : page 바 끝 -->\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <!-- 모달 테스트 시작 -->\r\n      <div id=\"modal\" class=\"modal-overlay\">\r\n        <div class=\"modal-window\">\r\n          <div class=\"col-xs-12\" style=\"padding-top: 5%\">\r\n            <div class=\"title col-xs-12\">\r\n              <h6>이 회원을 정말 삭제하시겠습니까?</h6>\r\n            </div>\r\n          </div>\r\n          <div class=\"content col-xs-12\" style=\"text-align: center\">\r\n            <a id=\"btn-modal\" class=\"closebtn col-xs-6\">아니요</a>\r\n            <a id=\"btn-modal\" class=\"finbtn col-xs-6\" @click=\"deleteUser\">예</a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <!-- 모달 테스트 끝 -->\r\n    </div>\r\n    <!-- TODO: 탑버튼 추가_정주희 -->\r\n    <a class=\"topbutton\" href=\"#\">\r\n      <img src=\"@/assets/images_jung/iconUp_48.png\"/>\r\n    </a>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport UserService from \"@/services/user.service.js\";\r\n\r\nexport default {\r\n  mounted() {\r\n    this.retrieveUser();\r\n\r\n    // 모달 테스트\r\n    const modal = document.getElementById(\"modal\");\r\n\r\n    function modalOn() {\r\n      modal.style.display = \"flex\";\r\n    }\r\n\r\n    function isModalOn() {\r\n      return modal.style.display === \"flex\";\r\n    }\r\n\r\n    function modalOff() {\r\n      modal.style.display = \"none\";\r\n    }\r\n    const btnModal = document.getElementById(\"btn-modal\");\r\n    btnModal.addEventListener(\"click\", (e) => {\r\n      modalOn(e);\r\n    });\r\n    const closeBtn2 = modal.querySelector(\".closebtn\");\r\n    closeBtn2.addEventListener(\"click\", (e) => {\r\n      modalOff(e);\r\n    });\r\n    modal.addEventListener(\"click\", (e) => {\r\n      const evTarget = e.target;\r\n      if (evTarget.classList.contains(\"modal-overlay\")) {\r\n        modalOff(e);\r\n      }\r\n    });\r\n    window.addEventListener(\"keyup\", (e) => {\r\n      if (isModalOn() && e.key === \"Escape\") {\r\n        modalOff(e);\r\n      }\r\n    });\r\n  },\r\n  data() {\r\n    return {\r\n      // 게시판관리 v-show\r\n      board: false,\r\n      user: [],\r\n      currentUser: null,\r\n      searchUsername: \"\",\r\n      message: \"\",\r\n\r\n      // 페이징을 위한 변수 정의\r\n      page: 1, // 현재 페이지\r\n      count: 0, // 전체 데이터 건수\r\n      pageSize: 3, // 한페이지당 몇개를 화면에 보여줄지 결정하는 변수\r\n\r\n      pageSizes: [3, 6, 9], // select box 에 넣을 기본 데이터\r\n    };\r\n  },\r\n  methods: {\r\n    //왼쪽 메뉴바 slide효과\r\n    boardclick() {\r\n      this.board = !this.board;\r\n    },\r\n    logout() {\r\n      this.$store.dispatch(\"auth/logout\");\r\n      this.$router.push(\"/\");\r\n    },\r\n    retrieveUser() {\r\n      UserService.getAll(this.searchUsername, this.page - 1, this.pageSize)\r\n        .then((response) => {\r\n          const { user, totalItems } = response.data;\r\n          this.user = user;\r\n          this.count = totalItems;\r\n\r\n          console.log(response.data);\r\n        })\r\n        .catch((e) => {\r\n          alert(\"then 못 가고 실패\");\r\n          console.log(e);\r\n        });\r\n    },\r\n    // currentUser 에 데이터 넣고 첫 모달창 열어주는 함수\r\n    modal(data) {\r\n      this.currentUser = data;\r\n\r\n      const modal = document.getElementById(\"modal\");\r\n      modal.style.display = \"flex\";\r\n    },\r\n    deleteUser() {\r\n      UserService.delete(this.currentUser.id)\r\n        .then((response) => {\r\n          console.log(response.data);\r\n          // this.retrieveUser();\r\n          this.user.splice(this.user.indexOf(this.currentUser.id), 1);\r\n          console.log(\"*********8\")\r\n          console.log(this.user)\r\n          console.log(\"********8\")\r\n\r\n          // 모달 끄기\r\n          const modal = document.getElementById(\"modal\");\r\n          modal.style.display = \"none\";\r\n        })\r\n        .catch((e) => {\r\n          console.log(e);\r\n          // window.location.reload();\r\n        });\r\n    },\r\n    handlePageSizeChange(event) {\r\n      this.pageSize = event.target.value; // 한페이지당 개수 저장(3, 6, 9)\r\n      this.page = 1;\r\n      // 재조회 함수 호출\r\n      this.retrieveUser();\r\n    },\r\n    // 페이지 번호 변경시 실행되는 함수(재조회)\r\n    handlePageChange(value) {\r\n      this.page = value; // 매개변수값으로 현재페이지 변경\r\n      // 재조회 함수 호출\r\n      this.retrieveUser();\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\nh4 {\r\n  color: aliceblue;\r\n  margin-right: 10%;\r\n}\r\n.user-hero {\r\n  height: 385px;\r\n  background: url(\"../../assets/images_kang/Components/common/Navcom/back-img-test16.png\") no-repeat;\r\n}\r\n.editbtn {\r\n  font-family: \"Dosis\", sans-serif;\r\n  font-size: 100%;\r\n  text-align: center;\r\n  color: black;\r\n  font-weight: bold;\r\n  text-transform: uppercase;\r\n  width: 50%;\r\n  height: 30%;\r\n  background-color: #dcf836;\r\n  margin-top: 20%;\r\n  margin-bottom: 7%;\r\n  padding: 7% 10%;\r\n  border-radius: 5px;\r\n}\r\n.editbtn:hover {\r\n  color: #fff;\r\n}\r\n.delbtn {\r\n  font-family: \"Dosis\", sans-serif;\r\n  font-size: 100%;\r\n  text-align: center;\r\n  color: black;\r\n  font-weight: bold;\r\n  text-transform: uppercase;\r\n  width: 50%;\r\n  height: 30%;\r\n  background-color: #dd003f;\r\n  padding: 7% 10%;\r\n  border-radius: 5px;\r\n}\r\n.delbtn:hover {\r\n  color: #fff;\r\n}\r\n/* 테스트 */\r\n#modal.modal-overlay {\r\n  /* width: 100%;\r\n  height: 100%; */\r\n  width: 100%;\r\n  height: 2000px;\r\n  position: absolute;\r\n  left: 0;\r\n  top: 0;\r\n  display: none;\r\n  /* display: flex; */\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  /* background: rgba(255, 255, 255, 0.25); */\r\n  box-shadow: 0 8px 32px 0 rgba(31, 38, 135, 0.37);\r\n  /* backdrop-filter: blur(1.5px); */\r\n  /* -webkit-backdrop-filter: blur(1.5px); */\r\n  border-radius: 10px;\r\n  /* border: 1px solid rgba(255, 255, 255, 0.18); */\r\n}\r\n#modal .modal-window {\r\n  background: white;\r\n  /* background: rgba(69, 139, 197, 0.7); */\r\n  /* box-shadow: 0 8px 32px 0 rgba(31, 38, 135, 0.37); */\r\n  /* backdrop-filter: blur(13.5px);\r\n  -webkit-backdrop-filter: blur(13.5px); */\r\n  border-radius: 5px;\r\n  border: 1px solid rgba(255, 255, 255, 0.18);\r\n  width: 20%;\r\n  height: 7%;\r\n  position: relative;\r\n  top: -265px;\r\n  padding: 10px;\r\n}\r\n#modal .title {\r\n  padding-left: 0;\r\n  display: inline;\r\n  font-size: 5%;\r\n  color: black;\r\n}\r\n#modal .title h2 {\r\n  display: inline;\r\n}\r\n#modal .close-area {\r\n  display: inline;\r\n  float: right;\r\n  padding-right: 0;\r\n  margin-right: 0;\r\n  cursor: pointer;\r\n  /* border: 200px; */\r\n  /* text-shadow: 1px 1px 2px black; */\r\n  color: grey;\r\n}\r\n\r\n#modal .content {\r\n  margin-top: 20px;\r\n  padding: 0px 10px;\r\n  /* text-shadow: 1px 1px 2px gray; */\r\n  color: black;\r\n}\r\n\r\n#modal .closebtn {\r\n  font-family: \"Dosis\", sans-serif;\r\n  font-size: 100%;\r\n  text-align: center;\r\n  color: black;\r\n  font-weight: bold;\r\n  text-transform: uppercase;\r\n  width: 48%;\r\n  /* height: 1%; */\r\n  background-color: grey;\r\n  padding: 3% 7%;\r\n  margin-top: 7%;\r\n  margin-right: 4%;\r\n  border-radius: 5px;\r\n}\r\n\r\n#modal .finbtn {\r\n  font-family: \"Dosis\", sans-serif;\r\n  font-size: 100%;\r\n  text-align: center;\r\n  color: black;\r\n  font-weight: bold;\r\n  text-transform: uppercase;\r\n  width: 48%;\r\n  /* height: 1%; */\r\n  background-color: #dd003f;\r\n  padding: 3% 7%;\r\n  margin-top: 7%;\r\n  margin-right: 0%;\r\n  border-radius: 5px;\r\n}\r\n\r\n/* 탑버튼 추가 _정주희 */\r\n.topbutton {\r\n  position: fixed;\r\n  bottom: 15px;\r\n  right: 15px;\r\n  width: 40px;\r\n  height: 40px;\r\n  z-index: 1;\r\n  opacity: 0.8;\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}