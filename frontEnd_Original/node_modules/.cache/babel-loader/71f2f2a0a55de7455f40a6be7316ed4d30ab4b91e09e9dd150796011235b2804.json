{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n/* eslint-disable */\n\n// import axios from \"axios\";   // 프로필이미지 업로드\nimport custom from \"@/assets/js/custom\";\n// User\nimport User from \"@/model/user\";\nimport userService from \"@/services/user.service\";\n// Review\nimport ReviewDataService from \"@/services/ReviewDataService\";\nimport Review from \"@/model/review\";\n// MovieDetail\nimport MovieDataService from \"@/services/MovieDataService\";\nexport default {\n  // 시작 시 실행\n  mounted() {\n    custom();\n    this.getUser();\n    this.getMovieData();\n  },\n  data() {\n    return {\n      // User Part\n      user: new User(),\n      message: \"\",\n      username: this.$store.state.auth.user.username,\n      // Review Part\n      review: [new Review()],\n      // 리뷰\n      reviewTotalCount: 0,\n      editReview: new Review(),\n      submitted: false,\n      // 리뷰작성후 버튼 클릭시 true로 변경\n\n      // Movie Part\n      movie: [],\n      // 임시로 movie로 출력확인 - 나중에 예매한 영화 들어오면 지울거임\n      moviecd: this.$route.params.moviecd,\n      // starRating: 0, // 가져온 평점을 내림함수로 정수 만들어주기 위한 변수\n      // userReview: \"\",\n      // userStarRaing: 3,\n\n      // 페이징을 위한 변수 정의\n      page: 1,\n      // 현재 페이지\n      count: 0,\n      // 전체 데이터 건수\n      pageSize: 5,\n      // 한페이지당 몇개를 화면에 보여줄지 결정하는 변수\n      pageSizes: [5, 10, 15],\n      // select box 에 넣을 기본 데이터\n\n      // TODO: 리뷰를 한번이라도 쓴 사람들은 더 이상 쓸 수 없도록 하는 코드 (최아리 추가) -1\n      alreadyReviewed: false\n    };\n  },\n  methods: {\n    // 백엔드 데이터 받는 함수\n    getUser() {\n      // username = this.$store.state.auth.user.username;\n      console.log(\"username: \" + this.username);\n      userService.getUserUsername(this.username).then(response => {\n        this.user = response.data;\n        console.log(\"getUser this.user: \", this.user);\n        console.log(\"getUser response.data: \", response.data);\n        this.getReview();\n      }).catch(err => console.log(err));\n    },\n    // 아리 별점\n    cutNames() {\n      // this.watchedMovie.starRating = Math.floor(this.watchedMovie.rating);\n      this.watchedMovie.starRating = Math.floor(this.watchedMovie.rating);\n      // alert(this.movie.starRating);\n    },\n\n    // 리뷰 출력 : username으로 검색, 가져오기\n    getReview() {\n      // alert(\"this.user.name: \" + this.user.name);\n      // alert(\"this.moviecd: \" + this.moviecd);\n\n      // TODO: 리뷰를 한번이라도 쓴 사람들은 더 이상 쓸 수 없도록 하는 코드 (최아리 추가) -2\n      ReviewDataService.getBycode(this.moviecd, this.page - 1, 10000000) // 모든 리뷰를 가져오기 위하여 임의로 준 수.\n      .then(response => {\n        const pastReviews = response.data.review.filter(r => r.rwuser == this.username);\n        this.alreadyReviewed = pastReviews.length > 0;\n      }).catch(e => {\n        console.log(e);\n      });\n      ReviewDataService.getRwuser(this.user.username, this.page - 1, this.pageSize).then(response => {\n        this.review = response.data;\n        console.log(\"response.data: \", response.data);\n        console.log(\"this.review: \", this.review);\n\n        // 내가 쓴 리뷰 갯수\n        this.reviewTotalCount = this.review.totalItems;\n        console.log(\"this.reviewTotalCount\", this.reviewTotalCount);\n      }).catch(e => {\n        console.log(e);\n      });\n    },\n    // 새로운 리뷰 저장 함수\n    saveReview() {\n      // TODO: 리뷰를 한번이라도 쓴 사람들은 더 이상 쓸 수 없도록 하는 코드 (최아리 추가) -3\n      if (this.alreadyReviewed) {\n        alert(\"이미 리뷰를 남기셨습니다.\");\n        this.editReview = new Review();\n        return;\n      }\n\n      // 리뷰 생성\n      this.editReview.rwuser = this.user.username;\n      this.editReview.movienm = this.movie.movienm;\n      this.editReview.moviecd = this.movie.moviecd;\n      this.editReview.showtm = this.movie.showtm;\n      this.editReview.opendt = this.movie.opendt;\n      this.editReview.watchgradenm = this.movie.watchgradenm;\n      ReviewDataService.create(this.editReview).then(response => {\n        console.log(response.data);\n        alert(\"리뷰가 저장되었습니다.\");\n        this.editReview = new Review();\n        // window.location.reload();\n        this.getReview();\n        // this.newReview()\n      }).catch(e => {\n        alert(\"리뷰저장 실패\");\n        console.log(e);\n        // window.location.reload();\n        alert(this.review.rid);\n      });\n    },\n    newReview() {\n      // 새양식 다시 보여주기, 변수 초기화\n      this.submitted = false;\n      this.review = [new Review()];\n    },\n    // FIXME: 리뷰 삭제\n    deleteReview(data) {\n      alert(\"클릭\");\n      this.review = data;\n      var test = this.review.rid;\n      alert(JSON.stringify(test));\n      // ReviewDataService.delete(this.review.moviecd)   // 영화코드로 삭제하기  FIXME:\n      ReviewDataService.delete(this.review.rid) // 리뷰 사용자로 삭제하기 ? 리뷰번호로 삭제되는듯\n      .then(response => {\n        console.log(response.data);\n        alert(\"리뷰가 삭제되었습니다.\");\n        window.location.reload(); // 홈으로 새고\n        // this.$router.push(\"/archive/:moviecd\");    // FIXME: 새고 어떻게하니..ㅋ\n        // this.getMovieData();\n      }).catch(e => {\n        console.log(e);\n      });\n    },\n    getMovieData() {\n      MovieDataService.getMovieDetail(this.moviecd).then(response => {\n        this.movie = response.data.MovieDetail[0];\n        console.log(\"response.data: \", response.data);\n        console.log(\"this.movie: \", this.movie);\n      }).catch(error => {\n        console.log(\"error: \", error);\n      });\n    },\n    // 로그아웃\n    logout() {\n      // this.$store.dispatch(\"모듈명/함수명\")\n      this.$store.dispatch(\"auth/logout\"); // 공통함수 logout 호출\n      this.$router.push(\"/\"); // 강제 홈페이지로 이동\n    },\n\n    // 페이징\n    handlePageChange(value) {\n      this.page = value;\n      this.getReview();\n    }\n  }\n};","map":{"version":3,"mappings":";AAuUA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;EACA;EACAA;IACAC;IACA;IACA;EACA;EACAC;IACA;MACA;MACAC;MACAC;MACAC;MAEA;MACAC;MAAA;MACAC;MACAC;MACAC;MAAA;;MAEA;MACAC;MAAA;MACAC;MACA;MACA;MACA;;MAEA;MACAC;MAAA;MACAC;MAAA;MACAC;MAAA;MACAC;MAAA;;MAEA;MACAC;IACA;EACA;EACAC;IACA;IACAC;MACA;MACAC;MACAC,YACAC,+BACAC;QACA;QACAH;QACAA;QAEA;MACA,GACAI;IACA;IACA;IACAC;MACA;MACA;MACA;IACA;;IACA;IACAC;MACA;MACA;;MAEA;MACAC;MAAA,CACAJ;QACA,gDACAK,+BACA;QACA;MACA,GACAJ;QACAJ;MACA;MAEAO,4BACA,oBACA,eACA,cACA,CACAJ;QACA;QACAH;QACAA;;QAEA;QACA;QACAA;MACA,GACAI;QACAJ;MACA;IACA;IACA;IACAS;MACA;MACA;QACAC;QACA;QACA;MACA;;MAEA;MACA;MACA;MACA;MACA;MACA;MACA;MACAH,0CACAJ;QACAH;QACAU;QACA;QACA;QACA;QACA;MACA,GACAN;QACAM;QACAV;QACA;QACAU;MACA;IACA;IACAC;MACA;MACA;MACA;IACA;IAEA;IACAC;MACAF;MACA;MACA;MACAA;MACA;MACAH;MAAA,CACAJ;QACAH;QACAU;QACAG;QACA;QACA;MACA,GACAT;QACAJ;MACA;IACA;IAEAc;MACAC,8CACAZ;QACA;QACAH;QACAA;MACA,GACAI;QACAJ;MACA;IACA;IACA;IACAgB;MACA;MACA;MACA;IACA;;IAEA;IACAC;MACA;MACA;IACA;EACA;AACA","names":["mounted","custom","data","user","message","username","review","reviewTotalCount","editReview","submitted","movie","moviecd","page","count","pageSize","pageSizes","alreadyReviewed","methods","getUser","console","userService","getUserUsername","then","catch","cutNames","getReview","ReviewDataService","r","saveReview","alert","newReview","deleteReview","window","getMovieData","MovieDataService","logout","handlePageChange"],"sourceRoot":"src/components/myPage","sources":["ArchiveCom.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <!--preloading-->\r\n    <!-- <div id=\"preloader\">\r\n        <img class=\"logo\" src=\"images/logo1.png\" alt=\"\" width=\"119\" height=\"58\" />\r\n        <div id=\"status\">\r\n          <span></span>\r\n          <span></span>\r\n        </div>\r\n      </div> -->\r\n\r\n    <!-- 상단 페이지 제목 -->\r\n    <div class=\"hero user-hero\">\r\n      <div class=\"container\">\r\n        <div class=\"row\">\r\n          <div class=\"col-md-12\">\r\n            <div class=\"hero-ct\">\r\n              <h1>{{ user.name }}’s archive</h1>\r\n              <ul class=\"breadcumb\">\r\n                <li class=\"active\">\r\n                  <router-link to=\"/\">Home</router-link>\r\n                </li>\r\n                <li><span class=\"ion-ios-arrow-right\"></span>MY ARCHIVE</li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"page-single\">\r\n      <div class=\"container\">\r\n        <div class=\"row ipad-width\">\r\n          <!-- todo: 이부분 나브 다른 Mypage 컴포넌트들 공통 -->\r\n          <!-- 공통 왼쪽 메뉴 시작 -->\r\n          <div class=\"col-md-3 col-sm-12 col-xs-12\">\r\n            <div class=\"user-information\">\r\n              <div class=\"user-img\">\r\n                <!-- src=\"images/uploads/user-img.png\" -->\r\n                <img\r\n                  class=\"profileImg\"\r\n                  src=\"@/assets/images_choi/Views/choi/MovieDetail/user.png\"\r\n                  alt=\"\"\r\n                />\r\n                <br />\r\n              </div>\r\n              <div class=\"user-fav\">\r\n                <ul>\r\n                  <li class=\"active\">\r\n                    <router-link to=\"\">프로필</router-link>\r\n                  </li>\r\n                  <!-- 프로필 로그인 정보 표시 시작-->\r\n                  <li style=\"color: white\">\r\n                    <strong style=\"color: white\">이름 </strong>\r\n                    <label>{{ user.name }}</label>\r\n                  </li>\r\n                  <li style=\"color: white\">\r\n                    <strong style=\"color: white\">아이디 </strong>\r\n                    <label>{{ user.username }}</label>\r\n                  </li>\r\n                  <!-- 프로필 로그인 정보 표시 끝 -->\r\n                </ul>\r\n              </div>\r\n\r\n              <div class=\"user-fav\">\r\n                <p>Account Details</p>\r\n                <ul>\r\n                  <li class=\"active\">\r\n                    <router-link to=\"/mypage\">내정보</router-link>\r\n                  </li>\r\n                  <li>\r\n                    <router-link to=\"/myticket\">예매내역</router-link>\r\n                  </li>\r\n                  <li>\r\n                    <router-link to=\"/mywish\">찜한 영화</router-link>\r\n                  </li>\r\n                  <li>\r\n                    <router-link to=\"/myqna\">나의 문의내역</router-link>\r\n                  </li>\r\n                  <li>\r\n                    <router-link to=\"/myprofile\">개인정보 수정</router-link>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n              <div class=\"user-fav\">\r\n                <p>Others</p>\r\n                <ul>\r\n                  <!--                  <li><a href=\"#\">Log out</a></li>-->\r\n                  <li><a href=\"#\" @click.prevent=\"logout\">Log out</a></li>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <!-- 공통 왼쪽 메뉴 끝 -->\r\n\r\n          <!-- 오른쪽 본문 내용 -->\r\n          <div class=\"col-md-9 col-sm-12 col-xs-12\">\r\n            <!-- 2) 리뷰 파트 시작 -->\r\n            <div class=\"topbar-filter user\">\r\n              <p class=\"mytitle\">나의 리뷰: 영화 관람평가</p>\r\n              <a href=\"userfavoritegrid.html\" class=\"grid\"\r\n                ><i class=\"ion-grid\"></i\r\n              ></a>\r\n            </div>\r\n\r\n            <!-- 리뷰작성 -->\r\n            <div id=\"reviews\" class=\"tab review\">\r\n              <div class=\"row\" style=\"padding: 3%\">\r\n                <div class=\"reviewForm\">\r\n                  <h2 class=\"MovieName\">{{ movie.movienm }}</h2>\r\n                  <div class=\"rv-hd\">\r\n                    <!-- <div\r\n                      class=\"div\"\r\n                      v-for=\"(data, index) in movie\"\r\n                      :key=\"index\"\r\n                    >\r\n                      <h2>{{ data.movienm }}</h2>\r\n                    </div> -->\r\n                  </div>\r\n                  <div>\r\n                    <div class=\"rv-hd\">\r\n                      <form\r\n                        class=\"review-form col-xs-12\"\r\n                        name=\"myform\"\r\n                        id=\"myform\"\r\n                        method=\"post\"\r\n                      >\r\n                        <!-- 리뷰 작성폼 시작 -->\r\n                        <div>\r\n                          <fieldset>\r\n                            <span class=\"review-form-style\"\r\n                              >별점을 선택해주세요</span\r\n                            >\r\n                            <input\r\n                              type=\"radio\"\r\n                              name=\"reviewStar\"\r\n                              value=\"5\"\r\n                              id=\"rate1\"\r\n                              v-model=\"editReview.rurating\"\r\n                            /><label for=\"rate1\">★</label>\r\n                            <input\r\n                              type=\"radio\"\r\n                              name=\"reviewStar\"\r\n                              value=\"4\"\r\n                              id=\"rate2\"\r\n                              v-model=\"editReview.rurating\"\r\n                            /><label for=\"rate2\">★</label>\r\n                            <input\r\n                              type=\"radio\"\r\n                              name=\"reviewStar\"\r\n                              value=\"3\"\r\n                              id=\"rate3\"\r\n                              v-model=\"editReview.rurating\"\r\n                            /><label for=\"rate3\">★</label>\r\n                            <input\r\n                              type=\"radio\"\r\n                              name=\"reviewStar\"\r\n                              value=\"2\"\r\n                              id=\"rate4\"\r\n                              v-model=\"editReview.rurating\"\r\n                            /><label for=\"rate4\">★</label>\r\n                            <input\r\n                              type=\"radio\"\r\n                              name=\"reviewStar\"\r\n                              value=\"1\"\r\n                              id=\"rate5\"\r\n                              v-model=\"editReview.rurating\"\r\n                            /><label for=\"rate5\">★</label>\r\n                          </fieldset>\r\n                          <textarea\r\n                            v-model=\"editReview.rucontent\"\r\n                            class=\"col-auto form-control\"\r\n                            style=\"fontsize: 91%\"\r\n                            type=\"text\"\r\n                            id=\"reviewContents\"\r\n                            required\r\n                            placeholder=\"평점 및 영화 관람평을 작성해주세요. 주제와 무관한 리뷰 또는 스포일러는 삭제될 수 있습니다.\"\r\n                          ></textarea>\r\n                        </div>\r\n                        <!-- 리뷰작성폼 끝 -->\r\n                      </form>\r\n\r\n                      <!-- 리뷰등록 버튼 -->\r\n                      <!-- <div v-if=\"!submitted\"> -->\r\n                      <div>\r\n                        <div class=\"col-xs-3\">\r\n                          <a href=\"#\" class=\"redbtn\" @click=\"saveReview\"\r\n                            >관람평 등록</a\r\n                          >\r\n                        </div>\r\n                        <!-- 등록버튼 끝 -->\r\n                      </div>\r\n                    </div>\r\n                    <!-- \r\n                    <div v-else>\r\n                      <div class=\"alert alert-success\" role=\"alert\">\r\n                        관람평이 등록되었습니다.!\r\n                      </div>\r\n                      <router-link to=\"/archive\" class=\"alert alert-success\"\r\n                        >뒤로</router-link\r\n                      >\r\n                    </div> -->\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <!-- 리뷰작성 끝 -->\r\n\r\n            <!-- 나의 리뷰 메뉴바  -->\r\n            <div class=\"topbar-filter user\">\r\n              <p class=\"mytitle\">\r\n                나의 리뷰 <span> {{ reviewTotalCount }} </span> in total\r\n              </p>\r\n              <a href=\"userfavoritegrid.html\" class=\"grid\"\r\n                ><i class=\"ion-grid\"></i\r\n              ></a>\r\n            </div>\r\n\r\n            <!-- 나의 리뷰 조회 시작 -->\r\n            <div class=\"row\">\r\n              <div\r\n                class=\"col-xs-12 movie-item-style-2 userrate\"\r\n                v-for=\"(data, index) in review.review\"\r\n                :key=\"index\"\r\n              >\r\n                <div class=\"mv-user-review-item\"></div>\r\n                <!-- 영화정보 -->\r\n                <div class=\"col-xs-3\">\r\n                  <div class=\"mv-item-infor\">\r\n                    <br />\r\n                    <h6>\r\n                      <router-link :to=\"'/allMovie/' + data.moviecd\">\r\n                        {{ data.movienm }}\r\n                        <span> ({{ data.opendt }}) </span></router-link\r\n                      >\r\n                    </h6>\r\n                    <p>\r\n                      Run Time: {{ data.showtm }}분 <br /><a\r\n                        >{{ data.watchgradenm }}\r\n                      </a>\r\n                    </p>\r\n                    <!--                    <span class=\"time sm\">{{ data.scheNo }}</span>-->\r\n                    <br />\r\n                  </div>\r\n                </div>\r\n\r\n                <!-- 영화정보 : 하드코딩이었음 (review에 )-->\r\n                <div class=\"col-xs-8\">\r\n                  <div class=\"row\" style=\"padding: 3%\">\r\n                    <div class=\"user-infor\">\r\n                      <div class=\"mv-user-review-item\">\r\n                        <div class=\"rate-star\">\r\n                          <h6>\r\n                            나의 별점\r\n                            <span\r\n                              class=\"rate-star-result\"\r\n                              v-for=\"(i, index) in data.rurating\"\r\n                              :key=\"index\"\r\n                              ><i class=\"ion-ios-star\"></i\r\n                            ></span>\r\n                          </h6>\r\n                        </div>\r\n                      </div>\r\n                      <!-- 리뷰 내용 -->\r\n                      <p style=\"margin-top: 2%\">\r\n                        {{ data.rucontent }}\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <!-- 리뷰삭제 버튼 -->\r\n                <div class=\"col-xs-2 deletebtn\">\r\n                  <div class=\"movie-item-style-2\">\r\n                    <a href=\"#\" class=\"redbtn\" @click=\"deleteReview(data)\"\r\n                      >삭제</a\r\n                    >\r\n                  </div>\r\n                </div>\r\n                <!-- 리뷰삭제 버튼 끝 -->\r\n              </div>\r\n\r\n              <!-- 리뷰 : 3 -->\r\n            </div>\r\n            <!-- 나의 리뷰 조회 끝 -->\r\n\r\n            <!-- 페이지 -->\r\n            <!-- <ul class=\"pagination\">\r\n              <li class=\"icon-prev\">\r\n                <a href=\"#\"><i class=\"ion-ios-arrow-left\"></i></a>\r\n              </li>\r\n              <li class=\"active\"><a href=\"#\">1</a></li>\r\n              <li><a href=\"#\">2</a></li>\r\n              <li><a href=\"#\">3</a></li>\r\n              <li><a href=\"#\">4</a></li>\r\n              <li><a href=\"#\">...</a></li>\r\n              <li><a href=\"#\">21</a></li>\r\n              <li><a href=\"#\">22</a></li>\r\n              <li class=\"icon-next\">\r\n                <a href=\"#\"><i class=\"ion-ios-arrow-right\"></i></a>\r\n              </li>\r\n            </ul> -->\r\n            <!-- 페이징처리-->\r\n            <!-- total-rows : 전체 데이터 개수 -->\r\n            <!-- per-page : 1페이지 당 개수 -->\r\n            <!-- change : handlePageChange(), 페이지 번호 변경 시 실행되는 이벤트 -->\r\n            <b-pagination\r\n              v-model=\"page\"\r\n              :total-rows=\"review.totalItems\"\r\n              :per-page=\"pageSize\"\r\n              pills\r\n              size=\"sm\"\r\n              prev-text=\"<\"\r\n              next-text=\">\"\r\n              @change=\"handlePageChange\"\r\n            ></b-pagination>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <!-- TODO: 탑버튼 추가 -->\r\n    <a class=\"topbutton\" href=\"#\">\r\n      <img src=\"@/assets/images_jung/iconUp_48.png\" />\r\n    </a>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n/* eslint-disable */\r\n\r\n// import axios from \"axios\";   // 프로필이미지 업로드\r\nimport custom from \"@/assets/js/custom\";\r\n// User\r\nimport User from \"@/model/user\";\r\nimport userService from \"@/services/user.service\";\r\n// Review\r\nimport ReviewDataService from \"@/services/ReviewDataService\";\r\nimport Review from \"@/model/review\";\r\n// MovieDetail\r\nimport MovieDataService from \"@/services/MovieDataService\";\r\n\r\nexport default {\r\n  // 시작 시 실행\r\n  mounted() {\r\n    custom();\r\n    this.getUser();\r\n    this.getMovieData();\r\n  },\r\n  data() {\r\n    return {\r\n      // User Part\r\n      user: new User(),\r\n      message: \"\",\r\n      username: this.$store.state.auth.user.username,\r\n\r\n      // Review Part\r\n      review: [new Review()], // 리뷰\r\n      reviewTotalCount: 0,\r\n      editReview: new Review(),\r\n      submitted: false, // 리뷰작성후 버튼 클릭시 true로 변경\r\n\r\n      // Movie Part\r\n      movie: [], // 임시로 movie로 출력확인 - 나중에 예매한 영화 들어오면 지울거임\r\n      moviecd: this.$route.params.moviecd,\r\n      // starRating: 0, // 가져온 평점을 내림함수로 정수 만들어주기 위한 변수\r\n      // userReview: \"\",\r\n      // userStarRaing: 3,\r\n\r\n      // 페이징을 위한 변수 정의\r\n      page: 1, // 현재 페이지\r\n      count: 0, // 전체 데이터 건수\r\n      pageSize: 5, // 한페이지당 몇개를 화면에 보여줄지 결정하는 변수\r\n      pageSizes: [5, 10, 15], // select box 에 넣을 기본 데이터\r\n\r\n      // TODO: 리뷰를 한번이라도 쓴 사람들은 더 이상 쓸 수 없도록 하는 코드 (최아리 추가) -1\r\n      alreadyReviewed: false,\r\n    };\r\n  },\r\n  methods: {\r\n    // 백엔드 데이터 받는 함수\r\n    getUser() {\r\n      // username = this.$store.state.auth.user.username;\r\n      console.log(\"username: \" + this.username);\r\n      userService\r\n        .getUserUsername(this.username)\r\n        .then((response) => {\r\n          this.user = response.data;\r\n          console.log(\"getUser this.user: \", this.user);\r\n          console.log(\"getUser response.data: \", response.data);\r\n\r\n          this.getReview();\r\n        })\r\n        .catch((err) => console.log(err));\r\n    },\r\n    // 아리 별점\r\n    cutNames() {\r\n      // this.watchedMovie.starRating = Math.floor(this.watchedMovie.rating);\r\n      this.watchedMovie.starRating = Math.floor(this.watchedMovie.rating);\r\n      // alert(this.movie.starRating);\r\n    },\r\n    // 리뷰 출력 : username으로 검색, 가져오기\r\n    getReview() {\r\n      // alert(\"this.user.name: \" + this.user.name);\r\n      // alert(\"this.moviecd: \" + this.moviecd);\r\n\r\n      // TODO: 리뷰를 한번이라도 쓴 사람들은 더 이상 쓸 수 없도록 하는 코드 (최아리 추가) -2\r\n      ReviewDataService.getBycode(this.moviecd, this.page - 1, 10000000) // 모든 리뷰를 가져오기 위하여 임의로 준 수.\r\n        .then((response) => {\r\n          const pastReviews = response.data.review.filter(\r\n            (r) => r.rwuser == this.username\r\n          );\r\n          this.alreadyReviewed = pastReviews.length > 0;\r\n        })\r\n        .catch((e) => {\r\n          console.log(e);\r\n        });\r\n\r\n      ReviewDataService.getRwuser(\r\n        this.user.username,\r\n        this.page - 1,\r\n        this.pageSize\r\n      )\r\n        .then((response) => {\r\n          this.review = response.data;\r\n          console.log(\"response.data: \", response.data);\r\n          console.log(\"this.review: \", this.review);\r\n\r\n          // 내가 쓴 리뷰 갯수\r\n          this.reviewTotalCount = this.review.totalItems;\r\n          console.log(\"this.reviewTotalCount\", this.reviewTotalCount);\r\n        })\r\n        .catch((e) => {\r\n          console.log(e);\r\n        });\r\n    },\r\n    // 새로운 리뷰 저장 함수\r\n    saveReview() {\r\n      // TODO: 리뷰를 한번이라도 쓴 사람들은 더 이상 쓸 수 없도록 하는 코드 (최아리 추가) -3\r\n      if (this.alreadyReviewed) {\r\n        alert(\"이미 리뷰를 남기셨습니다.\");\r\n        this.editReview = new Review();\r\n        return;\r\n      }\r\n\r\n      // 리뷰 생성\r\n      this.editReview.rwuser = this.user.username;\r\n      this.editReview.movienm = this.movie.movienm;\r\n      this.editReview.moviecd = this.movie.moviecd;\r\n      this.editReview.showtm = this.movie.showtm;\r\n      this.editReview.opendt = this.movie.opendt;\r\n      this.editReview.watchgradenm = this.movie.watchgradenm;\r\n      ReviewDataService.create(this.editReview)\r\n        .then((response) => {\r\n          console.log(response.data);\r\n          alert(\"리뷰가 저장되었습니다.\");\r\n          this.editReview = new Review();\r\n          // window.location.reload();\r\n          this.getReview();\r\n          // this.newReview()\r\n        })\r\n        .catch((e) => {\r\n          alert(\"리뷰저장 실패\");\r\n          console.log(e);\r\n          // window.location.reload();\r\n          alert(this.review.rid);\r\n        });\r\n    },\r\n    newReview() {\r\n      // 새양식 다시 보여주기, 변수 초기화\r\n      this.submitted = false;\r\n      this.review = [new Review()];\r\n    },\r\n\r\n    // FIXME: 리뷰 삭제\r\n    deleteReview(data) {\r\n      alert(\"클릭\");\r\n      this.review = data;\r\n      var test = this.review.rid;\r\n      alert(JSON.stringify(test));\r\n      // ReviewDataService.delete(this.review.moviecd)   // 영화코드로 삭제하기  FIXME:\r\n      ReviewDataService.delete(this.review.rid) // 리뷰 사용자로 삭제하기 ? 리뷰번호로 삭제되는듯\r\n        .then((response) => {\r\n          console.log(response.data);\r\n          alert(\"리뷰가 삭제되었습니다.\");\r\n          window.location.reload(); // 홈으로 새고\r\n          // this.$router.push(\"/archive/:moviecd\");    // FIXME: 새고 어떻게하니..ㅋ\r\n          // this.getMovieData();\r\n        })\r\n        .catch((e) => {\r\n          console.log(e);\r\n        });\r\n    },\r\n\r\n    getMovieData() {\r\n      MovieDataService.getMovieDetail(this.moviecd)\r\n        .then((response) => {\r\n          this.movie = response.data.MovieDetail[0];\r\n          console.log(\"response.data: \", response.data);\r\n          console.log(\"this.movie: \", this.movie);\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"error: \", error);\r\n        });\r\n    },\r\n    // 로그아웃\r\n    logout() {\r\n      // this.$store.dispatch(\"모듈명/함수명\")\r\n      this.$store.dispatch(\"auth/logout\"); // 공통함수 logout 호출\r\n      this.$router.push(\"/\"); // 강제 홈페이지로 이동\r\n    },\r\n\r\n    // 페이징\r\n    handlePageChange(value) {\r\n      this.page = value;\r\n      this.getReview();\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* 리뷰쓰기 css */\r\n.reviewForm {\r\n  height: 350px;\r\n}\r\n\r\n#myform fieldset {\r\n  display: inline-block;\r\n  direction: rtl;\r\n  border: 0;\r\n}\r\n\r\n#myform fieldset legend {\r\n  text-align: right;\r\n}\r\n\r\n#myform input[type=\"radio\"] {\r\n  display: none;\r\n}\r\n\r\n#myform label {\r\n  font-size: 3em;\r\n  color: transparent;\r\n  text-shadow: 0 0 0 #f0f0f0;\r\n}\r\n\r\n#myform label:hover {\r\n  text-shadow: 0 0 0 rgba(250, 208, 0, 0.99);\r\n}\r\n\r\n#myform label:hover ~ label {\r\n  text-shadow: 0 0 0 rgba(250, 208, 0, 0.99);\r\n}\r\n\r\n#myform input[type=\"radio\"]:checked ~ label {\r\n  text-shadow: 0 0 0 rgba(250, 208, 0, 0.99);\r\n}\r\n\r\n#reviewContents {\r\n  width: 100%;\r\n  height: 150px;\r\n  padding: 10px;\r\n  box-sizing: border-box;\r\n  border: solid 1.5px #d3d3d3;\r\n  border-radius: 5px;\r\n  font-size: 16px;\r\n  resize: none;\r\n}\r\n\r\n.review-form {\r\n  padding-left: 0%;\r\n  margin-bottom: 5%;\r\n}\r\n\r\n.review-form-style {\r\n  color: #999;\r\n}\r\n\r\n.MovieName {\r\n  color: rgb(60, 127, 186);\r\n  /* color: cadetblue; */\r\n}\r\n\r\n.list {\r\n  text-align: left;\r\n  max-width: 750px;\r\n  margin: auto;\r\n}\r\n\r\n.deletebtn {\r\n  margin-top: 10%;\r\n}\r\n\r\n/* 배경이미지 : 아리걸로 통일 */\r\n.user-hero {\r\n  background: url(@/assets/images_jung/movie-theater02.jpg) no-repeat;\r\n  /* height: 598px; */\r\n  width: 100%;\r\n}\r\n\r\n/* 마이페이지-프로필 이미지크기 수정 */\r\n.profileImg {\r\n  -ms-interpolation-mode: bicubic;\r\n  border: 0;\r\n  /* height: auto; */\r\n  max-height: 120px;\r\n  /* max-width: 100%; */\r\n  max-width: 120px;\r\n  vertical-align: middle;\r\n}\r\n\r\n.mytitle{\r\n  color: azure;\r\n}\r\n\r\n/* TODO: 탑버튼 추가 */\r\n.topbutton {\r\n  position: fixed;\r\n  bottom: 15px;\r\n  right: 15px;\r\n  width: 40px;\r\n  height: 40px;\r\n  z-index: 1;\r\n  opacity: 0.8;\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}